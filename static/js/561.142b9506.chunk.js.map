{"version":3,"file":"static/js/561.142b9506.chunk.js","mappings":"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","sources":["components/administration/Administration.styled.js","components/administration/association/Associations.styled.js","components/administration/association/Associations.js","icons/Icons.js","components/administration/associationassignment/AssociationAssignment.styled.js","components/administration/associationassignment/AssociationAssignment.js","components/administration/datetemplates/DateTemplates.styled.js","components/administration/datetemplates/DateTemplates.js","components/administration/scores/Scores.styled.js","components/administration/scores/Scores.js","components/administration/usergroupassignment/UsergroupAssignment.styled.js","components/administration/usergroupassignment/UsergroupAssignment.js","components/administration/usergroups/Usergroups.styled.js","components/administration/usergroups/Usergroups.js","components/administration/roles/Roles.styled.js","components/administration/roles/Roles.jsx","components/administration/roleassignment/RoleAssignment.styled.js","components/administration/roleassignment/RoleAssignment.jsx","components/administration/Administration.js","modules/components/Filter.js","modules/components/form/Form.js","modules/components/form/FormBox.js","modules/components/form/Selector.js","modules/components/form/SelectorItem.js","modules/components/headermenu/HeaderMenu.js","modules/components/overview/Table.js","modules/helper/Permissions.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledAdministration = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const StyledView = styled.div`\n    width: 100%;\n`","import styled from \"styled-components\";\n\nexport const StyledAssociations = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useEffect, useState } from \"react\"\nimport { useCallback } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { getAssociations, host, newAssociation, updateAssociation } from \"../../../modules/data/DBConnect\"\nimport { StyledAssociations } from \"./Associations.styled\"\n\nconst Associations = () => {\n\n    const [associations, setAssociations] = useState(new Array(0))\n    const [members, setMembers] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const fetchAssociations = useCallback(async () => {\n        let _associations = await getAssociations()\n        if(_associations !== undefined)\n            setAssociations(_associations)\n        else\n            setAssociations(new Array(0))\n    }, [])\n\n    const fetchMembers = useCallback(async () => {\n        fetch(`${host}/api/v0/member?api_token=${localStorage.getItem('api_token')}`)\n            .then(response => response.json())\n            .then(data => {\n                setMembers(data)\n            }, () => {\n                setMembers(new Array(0))\n            })\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchAssociations()\n        fetchMembers()\n    }, [fetchAssociations, fetchMembers])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchAssociations()\n        fetchMembers()\n    }, [fetchAssociations, fetchMembers])\n\n    return (\n        <StyledAssociations>\n            <AssociationSelector onSelect={onSelect} associations={associations}/>\n            <AssociationForm association={associations.find((association) => association.Association_ID === selected)} members={members} reload={reload}/>\n        </StyledAssociations>\n    )\n}\n\nconst AssociationSelector = ({ associations, onSelect}) => {\n    return(\n        <Selector>\n            {associations.map(association => {\n                return(<AssociationItem onSelect={onSelect} key={association.Title} association={association} />)\n            })}\n        </Selector>\n    )\n}\n\nconst AssociationItem = ({ association, onSelect }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(association.Association_ID)\n    }, [onSelect, association.Association_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {association.Title}\n        </SelectorItem>\n    )\n}\n\nconst AssociationForm = ({ association, members, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('association_form').reset()\n        document.getElementById('firstchair').selectedIndex = members?.findIndex(member => association?.FirstChair === member.Member_ID)\n        document.getElementById('clerk').selectedIndex = members?.findIndex(member => association?.Clerk === member.Member_ID)\n        document.getElementById('treasurer').selectedIndex = members?.findIndex(member => association?.Treasurer === member.Member_ID)\n    })\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title       = document.getElementById('title').value\n        let firstchair  = document.getElementById('firstchair').options[document.getElementById('firstchair').selectedIndex]?.value\n        let clerk       = document.getElementById('clerk').options[document.getElementById('clerk').selectedIndex]?.value\n        let treasurer   = document.getElementById('treasurer').options[document.getElementById('treasurer').selectedIndex]?.value\n\n        if(association !== undefined)\n            await updateAssociation(association.Association_ID, title, firstchair, clerk, treasurer)\n        else\n            await newAssociation(title, firstchair, clerk, treasurer)\n        \n        reload()\n    }\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    return(\n        <Form id=\"association_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Vereinsname:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={association?.Title} />\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"firstchair\">Vorsitz:</label>\n                <select id=\"firstchair\">\n                    {members.map(member => {\n                        return(<option key={`fcmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"clerk\">Schrift-/Geschäftsführer/-in:</label>\n                <select id=\"clerk\">\n                    {members.map(member => {\n                        return(<option key={`clmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"treasurer\">Kassierer/-in:</label>\n                <select id=\"treasurer\">\n                    {members.map(member => {\n                        return(<option key={`trmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default Associations","import { IconContext } from \"react-icons\"\nimport { IoIosAlert, IoIosCloseCircle } from 'react-icons/io'\nimport { IoCheckmarkCircle } from 'react-icons/io5'\n\nexport const Blank = ({ callback, size }) => {\n    //#24b9d0\n    return(\n        <IconContext.Provider value={{color: \"#24b9d0\", className: \"IconWrapper\"}}>\n            <IoIosAlert size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Check = ({ callback }) => {\n    //#00bd00\n    return(\n        <IconContext.Provider value={{color: \"#00bd00\", className: \"IconWrapper\"}}>\n            <IoCheckmarkCircle size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Deny = ({ callback }) => {\n    //#fe423e\n    return(\n        <IconContext.Provider value={{color: \"#fe423e\", className: \"IconWrapper\"}}>\n            <IoIosCloseCircle size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Alert = ({ callback }) => {\n    //#ffa11c\n    return(\n        <IconContext.Provider value={{color: \"#ffa11c\", className: \"IconWrapper\"}}>\n            <IoIosAlert size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nconst Circle = ({ callback }) => {\n    return(<svg size=\"100%\" className='IconWrapper'><circle cx=\"50%\" cy=\"50%\" r=\"35%\" fill='white' onClick={callback}/></svg>)\n}","import styled from \"styled-components\";\n\nexport const StyledAssociationAssignment = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    max-width: 100%;\n\n    img {\n        max-height: 1.5rem;\n    }\n\n    td {\n        text-align: center;\n        :nth-child(1) {\n            z-index: 2;\n        }\n    }\n\n    button {\n        width: fit-content;\n        align-self: center;\n    }\n\n    .IconWrapper {\n        max-height: 1.8rem;\n        max-width: 1.8rem;\n        position: absolute;\n        transform: translateX(-50%) translateY(-50%);\n    }\n\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nexport const StyledTableHeader = styled.th`\n    display: table-cell;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledMobileTableHeader = styled.th`\n    display: none;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: table-cell;\n    }\n`\n\nexport const StyledUsergroupLegend = styled.div`\n    display: none;\n\n    padding: 5px;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: flex;\n        flex-direction: column;\n    }\n`","import { useCallback, useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { Check, Deny } from \"../../../icons/Icons\"\nimport Button from \"../../../modules/components/button/Button\"\nimport { Table } from \"../../../modules/components/overview/Table\"\nimport { getAssociationAssignments, updateAssociationAssignments } from \"../../../modules/data/DBConnect\"\nimport { StyledAssociationAssignment, StyledMobileTableHeader, StyledTableHeader } from \"./AssociationAssignment.styled\"\n\nconst AssociationAssignment = () => {\n\n    const [associationassignment, setAssociationassignment] = useState(new Array(0))\n    const [changedAssignment, setChangedAssignment] = useState({})\n\n    const fetchAssociationassignment = useCallback(async () => {\n        getAssociationAssignments().then(assignments => {\n            if(assignments !== undefined)\n                setAssociationassignment(assignments)\n        })\n    }, [])\n\n    const onClick = useCallback((member_id, association_id, assigned) => {\n        let assign = {...changedAssignment}\n        if(assign[`${member_id}`] === undefined)\n            assign[`${member_id}`] = {}\n        \n        assign[`${member_id}`][`${association_id}`] = assigned\n\n        setChangedAssignment(assign)\n    }, [changedAssignment])\n\n    const saveChanges = useCallback(() => {\n        updateAssociationAssignments(changedAssignment)\n    }, [changedAssignment])\n\n    useEffect(() => {\n        fetchAssociationassignment()\n    }, [fetchAssociationassignment])\n\n    return(<StyledAssociationAssignment>\n        <Button onClick={saveChanges}>Speichern</Button>\n        <Table>\n            <thead>\n                <tr>\n                    <th>Name:</th>\n                    {associationassignment[0]?.Associations?.map(association => {\n                        return(\n                            <Header key={`h_${association.Association_ID}`} association={association}/>\n                        )\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {associationassignment.map(member => {\n                    return(\n                        <tr key={member.Member_ID}>\n                            <td>{member.Fullname}</td>\n                            {member.Associations?.map(association => {\n                                return(\n                                    <Assignment key={`${association.Association_ID}_${member.Member_ID}`} member_id={member.Member_ID} association_id={association.Association_ID} initial={association.Assigned} onClick={onClick}/>\n                                )\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n    </StyledAssociationAssignment>)\n}\n\nconst Header = ({ association }) => {\n    return (\n        <>\n            <StyledTableHeader>{association.Title}</StyledTableHeader>\n            <StyledMobileTableHeader>{association.Association_ID}</StyledMobileTableHeader>\n        </>\n    )\n}\n\nconst Assignment = ({ member_id, association_id, initial, onClick }) => {\n\n    const [assigned, setAssigned] = useState(initial)\n\n    const callback = useCallback(() => {\n        let _assigned = !assigned\n        setAssigned(_assigned)\n        onClick(member_id, association_id, _assigned)\n    }, [assigned, member_id, association_id, onClick])\n\n    return (\n        <AssignButton assigned={assigned} callback={callback}/>\n    )\n}\n\nconst AssignButton = ({ assigned, callback }) => {\n    return(\n        <td onClick={callback}>{assigned ? <Check /> : <Deny />}</td>\n    )\n}\n\nexport default AssociationAssignment","import styled from \"styled-components\";\n\nexport const StyledDateTemplates = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { getDateTemplates, getUsergroups, newDateTemplate, updateDateTemplate } from \"../../../modules/data/DBConnect\"\nimport { StyledDateTemplates } from \"./DateTemplates.styled\"\n\nconst DateTemplates = () => {\n\n    const [datetemplates, setDatetemplates] = useState(new Array(0))\n    const [usergroups, setUsergroups] = useState(new Array(0))\n\n    const [selected, setSelected] = useState(-1)\n\n    const fetchDatetemplates = useCallback(async () => {\n        let _datetemplates = await getDateTemplates()\n        if(_datetemplates !== undefined)\n            setDatetemplates(_datetemplates)\n        else\n            setDatetemplates(new Array(0))\n    }, [])\n\n    const fetchUsergroups = useCallback(async () => {\n        let _usergroups = await getUsergroups()\n        if(_usergroups !== undefined)\n            setUsergroups(_usergroups)\n        else\n            setUsergroups(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchDatetemplates()\n    }, [fetchDatetemplates])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchDatetemplates()\n        fetchUsergroups()\n    }, [fetchDatetemplates, fetchUsergroups])\n\n    return (\n        <StyledDateTemplates>\n            <DateTemplateSelector onSelect={onSelect} datetemplates={datetemplates} />\n            <DateTemplateForm datetemplate={datetemplates.find((datetemplate) => datetemplate.DateTemplate_ID === selected)} usergroups={usergroups} reload={reload} />\n        </StyledDateTemplates>\n    )\n}\n\nconst DateTemplateSelector = ({ datetemplates, onSelect}) => {\n    return (\n        <Selector>\n            {datetemplates.map(datetemplate => {\n                return(<DateTemplate onSelect={onSelect} key={datetemplate.Title} datetemplate={datetemplate}/>)\n            })}\n        </Selector>\n    )\n}\n\nconst DateTemplate = ({ onSelect, datetemplate }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(datetemplate.DateTemplate_ID)\n    }, [onSelect, datetemplate.DateTemplate_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {datetemplate.Title}\n        </SelectorItem>\n    )\n}\n\nconst DateTemplateForm = ({ datetemplate, usergroups, reload }) => {\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title           = document.getElementById('title').value\n        let description     = document.getElementById('description').value\n        let category        = document.getElementById('category').options[document.getElementById('category').selectedIndex].value\n        let type            = document.getElementById('type').value\n        let location        = document.getElementById('location').value\n        let begin           = document.getElementById('begin').value\n        let departure       = document.getElementById('departure').value\n        let leave_dep       = document.getElementById('leave_dep').value\n        let usergroup_id    = document.getElementById('usergroup').options[document.getElementById('usergroup').selectedIndex].value\n\n        if(datetemplate !== undefined)\n            await updateDateTemplate(datetemplate.DateTemplate_ID, title, description, category, type, location, begin, departure, leave_dep, usergroup_id)\n        else\n            await newDateTemplate(title, description, category, type, location, begin, departure, leave_dep, usergroup_id)\n\n        reload()\n    }\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    useEffect(() => {\n        document.getElementById('datetemplate_form').reset()\n        let category_select = document.getElementById('category')\n        for(let i = 0; i < category_select.options.length; i++){\n            if(category_select.options[i].value === datetemplate?.Category)\n                category_select.selectedIndex = i\n        } \n        document.getElementById('usergroup').selectedIndex = usergroups?.findIndex(usergroup => usergroup?.Usergroup_ID === datetemplate?.Usergroup_ID)\n    }, [datetemplate, usergroups])\n\n    return (\n        <Form id=\"datetemplate_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Bezeichnung:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={datetemplate?.Title}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"description\">Beschreibung</label>\n                <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"3\" defaultValue={datetemplate === undefined ? \"\" : datetemplate.Description}></textarea>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"category\">Art:</label>\n                <select name=\"category\" id=\"category\">\n                    <option value=\"event\">Auftritt</option>\n                    <option value=\"practice\">Üben/Probe</option>\n                    <option value=\"other\">Sonstiges</option>\n                </select>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"type\">Bezeichnung:</label>\n                <input type=\"text\" name=\"type\" id=\"type\" defaultValue={datetemplate?.Type}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"location\">Ort:</label>\n                <input type=\"text\" name=\"location\" id=\"location\" defaultValue={datetemplate?.Location}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"begin\">Startzeit:</label>\n                <input type=\"time\" name=\"begin\" id=\"begin\" step=\"1\" defaultValue={datetemplate?.Begin}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"departure\">Abfahrt:</label>\n                <input type=\"time\" name=\"departure\" id=\"departure\" step=\"1\" defaultValue={datetemplate?.Departure}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"leave_dep\">Rückfahrt:</label>\n                <input type=\"time\" name=\"leave_dep\" id=\"leave_dep\" step=\"1\" defaultValue={datetemplate?.Leave_dep}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"usergroup\">Sichtbarkeit:</label>\n                <select name=\"usergroup\" id=\"usergroup\">\n                    {usergroups.map(usergroup => {\n                        return(<option value={usergroup.Usergroup_ID} key={usergroup.Title}>{usergroup.Title}</option>)\n                    })}\n                </select>\n            </FormBox>\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default DateTemplates","import styled from \"styled-components\";\n\nexport const StyledScores = styled.div`\n    padding-left: env(safe-area-inset-left);\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n\n    iframe {\n        width: 100%;\n        aspect-ratio: 210/297;\n    }\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { deleteScore, getScores, newScore, updateScore } from \"../../../modules/data/DBConnect\"\nimport { StyledScores } from \"./Scores.styled\"\n\nconst Scores = () => {\n\n    const [scores, setScores] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n    \n    const fetchScores = useCallback(async () => {\n        let scores = await getScores()\n        if(scores !== undefined)\n            setScores(scores)\n        else\n            setScores(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchScores()\n    }, [fetchScores])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchScores()\n    }, [fetchScores])\n\n    return(<StyledScores>\n        <ScoreSelector scores={scores} onSelect={onSelect}/>\n        <ScoreForm score={scores.find((score) => score.Score_ID === selected)} reload={reload}/>\n    </StyledScores>)\n}\n\nconst ScoreSelector = ({ scores, onSelect }) => {\n    return(\n        <Selector>\n            {scores\n            .sort((a, b) => a.Title.localeCompare(b.Title))\n            .map(score => {\n                return(<Score onSelect={onSelect} key={score.Score_ID} score={score}/>)\n            })}\n        </Selector>\n    )\n}\n\nconst Score = ({ onSelect, score }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(score.Score_ID)\n    }, [onSelect, score])\n\n    return(<SelectorItem onClick={onClick}>\n        {score.Title}\n    </SelectorItem>)\n}\n\nconst ScoreForm = ({ score, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('score_form').reset()\n    }, [score])\n\n    const cancel = (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title = document.getElementById('title').value\n        let link = document.getElementById('link').value\n\n        if(score !== undefined)\n            await updateScore(score.Score_ID, title, link)\n        else\n            newScore(title, link)\n        \n        document.getElementById('score_form').reset()\n        reload()\n    }\n\n    const deleteSC = async (e) => {\n        e.preventDefault()\n        if(score !== undefined)\n            await deleteScore(score.Score_ID)\n        reload()\n    }\n\n    return(<Form id=\"score_form\">\n        <FormBox>\n            <label htmlFor=\"title\">Name:</label>\n            <input type=\"text\" name=\"title\" id=\"title\" defaultValue={score?.Title} />\n        </FormBox>\n        <FormBox>\n            <label htmlFor=\"link\">Link:</label>\n            <input type=\"url\" name=\"link\" id=\"link\" defaultValue={score?.Link} />\n        </FormBox>\n        <div>\n            <Button onClick={cancel}>Abbrechen</Button>\n            <Button onClick={update}>Speichern</Button>\n            <Button onClick={deleteSC}>Löschen</Button>\n        </div>\n        {score?.Link ? <iframe title=\"score_view\" src={score?.Link}></iframe> : <></>}\n    </Form>)\n}\n\nexport default Scores","import styled from \"styled-components\";\n\nexport const StyledUsergroupAssignment = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    max-width: 100%;\n\n    img {\n        max-height: 1.5rem;\n    }\n\n    td {\n        text-align: center;\n        :nth-child(1) {\n            z-index: 2;\n        }\n    }\n\n    button {\n        width: fit-content;\n        align-self: center;\n    }\n\n    .IconWrapper {\n        max-height: 1.8rem;\n        max-width: 1.8rem;\n        position: absolute;\n        transform: translateX(-50%) translateY(-50%);\n    }\n\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nexport const StyledTableHeader = styled.th`\n    display: table-cell;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledMobileTableHeader = styled.th`\n    display: none;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: table-cell;\n    }\n`\n\nexport const StyledUsergroupLegend = styled.div`\n    display: none;\n\n    padding: 5px;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: flex;\n        flex-direction: column;\n    }\n`","import { useCallback, useEffect, useState } from \"react\"\nimport { Table } from \"../../../modules/components/overview/Table\"\nimport { getUsergroupAssignments, updateUsergroupAssignments } from \"../../../modules/data/DBConnect\"\nimport { StyledMobileTableHeader, StyledTableHeader, StyledUsergroupAssignment, StyledUsergroupLegend } from \"./UsergroupAssignment.styled\"\n\nimport Button from \"../../../modules/components/button/Button\"\nimport { Check, Deny } from \"../../../icons/Icons\"\n\nconst UsergroupAssignment = () => {\n\n    const [usergroupassignment, setUsergroupassignment] = useState(new Array(0))\n    const [changedAssignment, setChangedAssignment] = useState({})\n\n    const fetchUsergroupassignment = useCallback(async () => {\n        let _usergroupassignment = await getUsergroupAssignments()\n        if(_usergroupassignment !== undefined)\n            setUsergroupassignment(_usergroupassignment)\n        else\n            setUsergroupassignment(new Array(0))\n    }, [])\n\n    const onClick = useCallback((member_id, usergroup_id, assigned) => {\n        let assign = {...changedAssignment}\n        if(assign[`${member_id}`] === undefined)\n            assign[`${member_id}`] = {}\n        \n        assign[`${member_id}`][`${usergroup_id}`] = assigned\n\n        setChangedAssignment(assign)\n    }, [changedAssignment])\n\n    const saveChanges = useCallback(() => {\n        updateUsergroupAssignments(changedAssignment)\n    }, [changedAssignment])\n\n    useEffect(() => {\n        fetchUsergroupassignment()\n    }, [fetchUsergroupassignment])\n\n    return(\n        <StyledUsergroupAssignment>\n            <Button onClick={saveChanges}>Speichern</Button>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Name:</th>\n                        {usergroupassignment[0]?.Usergroups.map(usergroup => {\n                            return(\n                                <Header key={`h_${usergroup.Usergroup_ID}`} usergroup={usergroup} />\n                            )\n                        })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {usergroupassignment.map(user => {\n                        return (\n                            <tr key={user.Member_ID}>\n                                <td>{user.Fullname}</td>\n                                {user.Usergroups.map(usergroup => {\n                                    return(\n                                        <Assignment key={`${usergroup.Usergroup_ID}_${user.Member_ID}`} member_id={user.Member_ID} usergroup_id={usergroup.Usergroup_ID} initial={usergroup.Assigned} onClick={onClick}/>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n            <UsergroupLegend usergroups={usergroupassignment[0]?.Usergroups}/>\n        </StyledUsergroupAssignment>\n    )\n}\n\nconst Header = ({ usergroup }) => {\n    return (\n        <>\n            <StyledTableHeader>{usergroup.Title}</StyledTableHeader>\n            <StyledMobileTableHeader>{usergroup.Usergroup_ID}</StyledMobileTableHeader>\n        </>\n    )\n}\n\nconst Assignment = ({ member_id, usergroup_id, initial, onClick }) => {\n\n    const [assigned, setAssigned] = useState(initial)\n\n    const callback = useCallback(() => {\n        let _assigned = !assigned\n        setAssigned(_assigned)\n        onClick(member_id, usergroup_id, _assigned)\n    }, [assigned, member_id, usergroup_id, onClick])\n\n    return (\n        <AssignButton assigned={assigned} callback={callback}/>\n    )\n}\n\nconst AssignButton = ({ assigned, callback }) => {\n    return(\n        <td onClick={callback}>{assigned ? <Check /> : <Deny />}</td>\n    )\n}\n\nconst UsergroupLegend = ({ usergroups }) => {\n    return(\n        <StyledUsergroupLegend>\n            {usergroups?.map(usergroup => {\n                return(<div key={`${usergroup.Usergroup_ID}_legend`}>{usergroup.Usergroup_ID}: {usergroup.Title}</div>)\n            })}\n        </StyledUsergroupLegend>\n    )\n}\n\nexport default UsergroupAssignment","import styled from \"styled-components\";\n\nexport const StyledUsergroups = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { deleteUsergroup, getAssociations, getUsergroups, newUsergroup, updateUsergroup } from \"../../../modules/data/DBConnect\"\nimport { StyledUsergroups } from \"./Usergroups.styled\"\n\nconst Usergroups = () => {\n\n    const [usergroups, setUsergroups] = useState(new Array(0))\n    const [associations, setAssociations] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const fetchUsergroups = useCallback(async () => {\n        let _usergroups = await getUsergroups()\n        if(_usergroups !== undefined)\n            setUsergroups(_usergroups)\n        else\n            setUsergroups(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchUsergroups()\n    }, [fetchUsergroups])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        getUsergroups().then((usergroups) => {\n            if(usergroups !== undefined)\n                setUsergroups(usergroups)\n            else\n                setUsergroups(new Array(0))\n        })\n        getAssociations().then((associations) => {\n            if(associations !== undefined)\n                setAssociations(associations)\n            else\n                setAssociations(new Array(0))\n        })\n    }, [fetchUsergroups])\n\n    return(\n        <StyledUsergroups>\n            <UsergroupSelector onSelect={onSelect} usergroups={usergroups}/>\n            <UsergroupForm usergroup={usergroups.find((usergroup) => usergroup.Usergroup_ID === selected)} associations={associations} reload={reload}/>\n        </StyledUsergroups>\n    )\n}\n\nconst UsergroupSelector = ({ usergroups, onSelect}) => {\n    return(\n        <Selector>\n            {usergroups.map(usergroup => {\n                return(<Usergroup onSelect={onSelect} key={usergroup.Title} usergroup={usergroup} />)\n            })}\n        </Selector>\n    )\n}\n\nconst Usergroup = ({ onSelect, usergroup}) => {\n\n    const onClick = useCallback(() => {\n        onSelect(usergroup.Usergroup_ID)\n    }, [onSelect, usergroup.Usergroup_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {usergroup.Title}\n        </SelectorItem>\n    )\n}\n\nconst UsergroupForm = ({ usergroup, associations, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('usergroup_form').reset()\n        document.getElementById('association').selectedIndex = associations?.findIndex(association => usergroup?.Association_ID === association.Association_ID)\n        document.getElementById('admin').checked = usergroup?.Admin === \"1\"\n        document.getElementById('moderator').checked = usergroup?.Moderator === \"1\"\n    }, [usergroup, associations])\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title       = document.getElementById('title').value\n        let admin       = document.getElementById('admin').checked\n        let moderator   = document.getElementById('moderator').checked\n        let info        = document.getElementById('info').value\n        let association = document.getElementById('association').options[document.getElementById('association').selectedIndex]?.value\n\n        if (title === \"\") {\n            alert(\"Bitte gib eine Bezeichnung ein!\")\n            return\n        }\n\n        console.log(association)\n\n        if (association === undefined) {\n            alert(\"Bitte wähl einen Verein aus!\")\n            return\n        }\n\n        if(usergroup !== undefined)\n            await updateUsergroup(usergroup.Usergroup_ID, title, admin, moderator, info, association)\n        else\n            await newUsergroup(title, admin, moderator, info, association)\n\n        reload()\n    }\n\n    const deleteUG = async (e) => {\n        e.preventDefault()\n        if(usergroup !== undefined)\n            await deleteUsergroup(usergroup.Usergroup_ID)\n        reload()\n    }\n\n    return(\n        <Form id=\"usergroup_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Bezeichnung:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={usergroup?.Title}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"admin\">Admin:</label>\n                <input type=\"checkbox\" name=\"admin\" id=\"admin\" defaultChecked={usergroup === undefined ? false : usergroup.Admin}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"moderator\">Moderator:</label>\n                <input type=\"checkbox\" name=\"moderator\" id=\"moderator\" defaultChecked={usergroup === undefined ? false : usergroup.Moderator}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"info\">Info:</label>\n                <textarea name=\"info\" id=\"info\" cols=\"30\" rows=\"3\" defaultValue={usergroup === undefined ? \"\" : usergroup.Info}></textarea>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"association\">Verein:</label>\n                <select name=\"association\" id=\"association\">\n                    {associations.map(association => {\n                        return(<option key={association.Association_ID} value={association.Association_ID}>{association.Title}</option>)\n                    })}\n                </select>\n            </FormBox>\n\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n                <Button onClick={deleteUG}>Löschen</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default Usergroups","import styled from 'styled-components';\n\nexport const StyledRole = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const StyledRoleForm = styled.form`\n    display: grid;\n    grid-template-columns: auto auto;\n\n    width: fit-content;\n    margin: 5px;\n\n    input, textarea {\n        width: 100%;\n        padding: 5px;\n        margin: 1px;\n        border-radius: 5px;\n        border: 1px solid ${({ theme }) => theme.primaryLight};\n        color: ${({ theme }) => theme.primaryDark};\n        background-color: ${({ theme }) => theme.primaryLight};\n    }\n\n    input, checkbox {\n        max-height: 16px;\n    }\n`","import { Fragment, useEffect, useState } from \"react\";\nimport Selector from \"../../../modules/components/form/Selector\";\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\";\nimport { StyledRole, StyledRoleForm } from \"./Roles.styled\";\nimport { host } from \"../../../modules/data/DBConnect\";\nimport Button from \"../../../modules/components/button/Button\";\n\nconst Roles = () => {\n\n    const [roles, setRoles] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const onReload = () => {\n        fetchRoles()\n    }\n\n    const onSelect = (id) => {\n        setSelected(id)\n    }\n\n    const fetchRoles = () => {\n        fetch(`${host}/api/v0/roles?api_token=${localStorage.getItem('api_token')}`)\n            .then(response => {\n                if(response.ok)\n                    return response.json()\n                else\n                    return []\n            })\n            .then(data => {\n                setRoles(data)\n            })\n    }\n\n    useEffect(() => {\n        fetchRoles()\n    }, [])\n\n    return(<StyledRole>\n        <RoleSelector roles={roles} onSelect={onSelect} />\n        <RoleForm role={roles.find((role) => role.role_id === selected)} onReload={onReload} />\n    </StyledRole>)\n}\n\nconst RoleSelector = ({ roles, onSelect }) => {\n    return(\n        <Selector>\n            <RoleItem onSelect={onSelect} role={{role_id: -1, role_name: '*Neue Rolle'}} />\n            {roles.map(role => {\n                return(<RoleItem onSelect={onSelect} key={role.role_name} role={role} />)\n            })}\n        </Selector>\n    )\n}\n\nconst RoleItem = ({ role, onSelect }) => {\n    return(\n        <SelectorItem onClick={() => onSelect(role.role_id)}>\n            {role.role_name}\n        </SelectorItem>\n    )\n}\n\nconst RoleForm = ({ role, onReload }) => {\n\n    const [permissions, setPermissions] = useState(new Array(0))\n\n    const deleteRole = (e) => {\n        e.preventDefault()\n\n        if(role === undefined)\n            return\n\n        fetch(`${host}/api/v0/roles/${role.role_id}?api_token=${localStorage.getItem('api_token')}`, {\n            method: 'DELETE'\n        }).then(response => {\n            if(response.ok)\n                onReload()\n            else if (response.status === 409)\n                alert('Rolle kann nicht gelöscht werden, da ihr noch Benutzer zugeordnet.')\n            else\n                alert('Fehler beim Löschen der Rolle')\n        })\n    }\n    \n    const save = (e) => {\n\n        let url = ''\n        const data = {\n            role_name: document.getElementById('roletitle').value,\n            description: document.getElementById('roledescription').value,\n            permissions: permissions.filter(permission => document.getElementById(permission.permission_name).checked).map(permission => permission.permission_id)\n        }\n\n        e.preventDefault()\n\n        if(role === undefined)\n            url = `${host}/api/v0/roles?api_token=${localStorage.getItem('api_token')}`\n        else\n            url = `${host}/api/v0/roles/${role.role_id}?api_token=${localStorage.getItem('api_token')}`\n        \n        fetch(url, {\n            method: (role === undefined) ? 'POST' : 'PUT',\n            body: JSON.stringify(data)\n        }).then(() => {\n            onReload()\n        })\n    }\n\n    useEffect(() => {\n        fetch(`${host}/api/v0/permissions?api_token=${localStorage.getItem('api_token')}`)\n            .then(response => response.json())\n            .then(data => {\n                setPermissions(data)\n            })\n    }, [])\n\n    useEffect(() => {\n        if(role === undefined){\n            // reset form\n            document.getElementById('roletitle').value = ''\n            document.getElementById('roledescription').value = ''\n            permissions.forEach(permission => {\n                document.getElementById(permission.permission_name).checked = false\n            })\n        } else {\n            document.getElementById('roletitle').value = role.role_name\n            document.getElementById('roledescription').value = role.description\n            permissions.forEach(permission => {\n                document.getElementById(permission.permission_name).checked = role.permissions.includes(permission.permission_id)\n            })\n        }\n    }, [role, permissions])\n\n    return(\n        <StyledRoleForm>\n            <label>Rolle:</label>\n            <input type=\"text\" id=\"roletitle\" />\n            <label>Beschreibung:</label>\n            <textarea id=\"roledescription\" />\n            {permissions.map(permission => {\n                return(\n                    <Fragment key={permission.permission_name}>\n                        <label>{permission.description}</label>\n                        <input type=\"checkbox\" id={permission.permission_name} defaultChecked={role?.permissions.includes(permission.permission_id)} />\n                    </Fragment>\n                )\n            })}\n            <Button onClick={save}>Speichern</Button>\n            <Button onClick={deleteRole}>Löschen</Button>\n        </StyledRoleForm>\n    )\n}\n\nexport default Roles;","import styled from \"styled-components\";\n\nexport const StyledRoleAssignment = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const StyledRoleAssignmentForm = styled.form`\n    display: grid;\n`","import { useCallback, useEffect, useState } from \"react\";\nimport Selector from \"../../../modules/components/form/Selector\";\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\";\nimport { StyledRoleAssignment, StyledRoleAssignmentForm } from \"./RoleAssignment.styled\";\nimport { getAssociations, host } from \"../../../modules/data/DBConnect\";\nimport Filter from \"../../../modules/components/Filter\";\nimport Button from \"../../../modules/components/button/Button\";\nimport { hasPermission } from \"../../../modules/helper/Permissions\";\n\nconst RoleAssignment = () => {\n\n    const [associations, setAssociations] = useState(new Array(0))\n    const [members, setMembers] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const fetchAssociations = useCallback(async () => {\n        let _associations = await getAssociations()\n        if(_associations !== undefined)\n            setAssociations(_associations)\n        else\n            setAssociations(new Array(0))\n    }, [])\n\n    const fetchMembers = useCallback(async () => {\n        if (selected === -1) {\n            return\n        }\n\n        fetch(`${host}/api/v0/member?association_id=${selected}&&api_token=${localStorage.getItem('api_token')}`)\n            .then(response => response.json())\n            .then(data => {\n                setMembers(data)\n            })\n    }, [selected])\n\n    const onSelect = (id) => {\n        setSelected(id)\n    }\n\n\n    useEffect(() => {\n        fetchAssociations()\n        fetchMembers()\n    }, [fetchAssociations, fetchMembers])\n\n    return (\n        <StyledRoleAssignment>\n            <AssociationSelector onSelect={onSelect} associations={associations} />\n            <RoleAssignEditor members={members} association={associations.find(assoc => assoc.Association_ID === selected)}/>\n        </StyledRoleAssignment>\n    )\n}\n\nconst AssociationSelector = ({ associations, onSelect }) => {\n    return (\n        <Selector>\n            {associations.map(association => {\n                if(hasPermission(5, association.Association_ID)) // only show associations where the user has the permission to assign roles\n                    return (<AssociationItem key={association.Title} association={association} onSelect={onSelect}/>)\n                return (<></>)\n            })}\n        </Selector>\n    )\n}\n\nconst AssociationItem = ({ association, onSelect }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(association.Association_ID)\n    }, [onSelect, association.Association_ID])\n\n    return (\n        <SelectorItem onClick={onClick}>\n            {association.Title}\n        </SelectorItem>\n    )\n}\n\nconst RoleAssignEditor = ({ members, association }) => {\n\n    const [selected, setSelected] = useState(-1)\n    const [roles, setRoles] = useState(new Array(0))\n    const [assignedRoles, setAssignedRoles] = useState(new Array(0))\n\n    const options = [\n        {\n            value: -1,\n            label: association !== undefined ? 'Mitglied auswählen' : \"erst Verein auswählen\"\n        },\n        ...members.map(member => {\n        return {\n            value: member.Member_ID,\n            label: member.Forename + ' ' + member.Surname\n        }\n    })]\n\n    const fetchRoles = useCallback(() => {\n        fetch(`${host}/api/v0/roles?api_token=${localStorage.getItem('api_token')}`)\n            .then(response => {\n                if(response.ok)\n                    return response.json()\n                else\n                    return []\n            })\n            .then(data => {\n                setRoles(data)\n            })\n    }, [])\n\n    const onChange = useCallback((e) => {\n        setSelected(parseInt(e.target.value))\n        let roles = members.find(member => {\n            return member.Member_ID === parseInt(e.target.value)\n        })?.Roles\n\n        if(roles !== undefined) {\n            let assigned = roles[parseInt(association?.Association_ID)]\n            if (assigned !== undefined)\n                setAssignedRoles(assigned)\n            else\n                setAssignedRoles(new Array(0))\n        } else\n            setAssignedRoles(new Array(0))\n    }, [members, association])\n\n    const save = (e) => {\n        e.preventDefault()\n        const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked')\n        const role_ids = Array.from(checkboxes).map(checkbox => parseInt(checkbox.value))\n        fetch(`${host}/api/v0/roleassign/${selected}?api_token=${localStorage.getItem('api_token')}`, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                association_id: association.Association_ID,\n                role_ids: role_ids\n            })\n        })\n    }\n\n    useEffect(() => {\n        fetchRoles()\n    }, [fetchRoles])\n\n    const onRoleSelect = (e) => {\n        let role_id = parseInt(e.target.value)\n        if(e.target.checked) {\n            setAssignedRoles([...assignedRoles, role_id])\n        } else {\n            setAssignedRoles(assignedRoles.filter(role => role !== role_id))\n        }\n    }\n\n    return (\n        <StyledRoleAssignmentForm>\n            <Filter options={options} onChange={onChange}/>\n            <h2>{association?.Title}</h2>\n            <h3>{members.find(member => {\n                return member.Member_ID === selected\n            })?.Forename}</h3>\n            <RoleSelector roles={roles} assignedRoles={assignedRoles} onSelect={onRoleSelect} />\n            <Button onClick={save}>Speichern</Button>\n        </StyledRoleAssignmentForm>\n    )\n}\n\nconst RoleSelector = ({ roles, assignedRoles, onSelect }) => {\n\n    useEffect(() => {\n        for (let role of roles) {\n            document.getElementById(`role_${role.role_id}`).checked = assignedRoles?.includes(role.role_id)\n        }\n    }, [assignedRoles, roles])\n\n    return (<>\n        {roles.map(role => {\n            return(<label key={role.role_id}>\n                <input type=\"checkbox\" id={`role_${role.role_id}`} value={role.role_id} onChange={onSelect}/>\n                {role.role_name}\n                </label>)\n        })}\n    </>)\n}\n\nexport default RoleAssignment;","import { useState } from \"react\";\nimport Button from \"../../modules/components/button/Button\"\nimport HeaderMenu from \"../../modules/components/headermenu/HeaderMenu\"\nimport { StyledAdministration, StyledView } from \"./Administration.styled\"\nimport Associations from \"./association/Associations\";\nimport AssociationAssignment from \"./associationassignment/AssociationAssignment\";\nimport DateTemplates from \"./datetemplates/DateTemplates\";\nimport Scores from \"./scores/Scores\"\nimport UsergroupAssignment from \"./usergroupassignment/UsergroupAssignment\";\nimport Usergroups from \"./usergroups/Usergroups\";\nimport Roles from \"./roles/Roles\";\nimport RoleAssignment from \"./roleassignment/RoleAssignment\";\nimport { hasAnyPermission, hasPermission } from \"../../modules/helper/Permissions\";\n\nconst Administration = () => {\n\n    const [view, setView] = useState(0);\n\n    const labels = [\n        'Vereine',\n        'Vereinzuordnung',\n        'Benutzergruppen',\n        'Gruppenzuordnung',\n        ...hasAnyPermission([3, 4]) ? ['Rollen'] : [],\n        ...hasAnyPermission([3, 5]) ? ['Rollenzuordnung'] : [],\n        'Terminvorlagen',\n        'Noten'\n    ]\n\n    const navigate = (e) => {\n        const buttonNumber = parseInt(e.target.id.split('_')[2]);\n        if (!isNaN(buttonNumber)) {\n            setView(buttonNumber);\n        }\n    }\n\n    return(\n        <StyledAdministration>\n            <HeaderMenu>\n                {labels.map((label, index) => (\n                    <Button key={index} id={`Button_Administration_${index}`} onClick={navigate}>{label}</Button>\n                ))}\n            </HeaderMenu>\n            <View view={view}/>\n        </StyledAdministration>\n    )\n}\n\nconst View = ({ view }) => {\n\n    const views = [\n        <Associations />,\n        <AssociationAssignment />,\n        <Usergroups />,\n        <UsergroupAssignment />,\n        ...hasPermission(4) ? [<Roles />] : [],\n        ...hasPermission(5) ? [<RoleAssignment />] : [],\n        <DateTemplates />,\n        <Scores />\n    ]\n\n    return(\n        <StyledView>\n            {views[view] || <Associations />}\n        </StyledView>\n    )\n}\n\nexport default Administration","import { useCallback } from \"react\"\n\nconst Filter = (props) => {\n\n    const onChange = useCallback((e) => {\n        props.onChange(e)\n    }, [props])\n\n    return(\n        <select onChange={onChange}>\n            {props.options.map((option, index) => {\n                return(\n                    <option value={option.value} key={index}>{option.label}</option>\n                )\n            })}\n        </select>\n    )\n}\n\nexport default Filter","import styled from \"styled-components\"\n\nconst Form = styled.form`\n    display: block;\n    width: 100%;\n    padding: 5px;\n`\n\nexport default Form","import styled from \"styled-components\";\n\nconst FormBox = styled.div`\n    display: block;\n    padding: 2px;\n    label {\n        float: left;\n        width: 25%;\n        min-width: 100px;\n    }\n`\n\nexport default FormBox","import styled from \"styled-components\"\n\nconst Selector = styled.nav`\n    margin: 2px;\n    padding: 2px;\n    white-space: nowrap;\n    border: 1px solid ${({ theme }) => theme.primaryLight};\n    border-radius: 10px;\n    overflow-y: scroll;\n    max-height: 75vh;\n    min-width: fit-content;\n    width: auto;\n    max-width: fit-content;\n\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        white-space: normal;\n    }\n\n    ::-webkit-scrollbar {\n        width: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background: none;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: ${({ theme }) => theme.primaryLight};\n        border-radius: 5px;\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: ${({ theme }) => theme.primaryHover};\n    }\n`\n\nexport default Selector","import styled from \"styled-components\"\n\nconst SelectorItem = styled.div`\n    user-select: none;\n    cursor: pointer;\n    padding: 2px;\n    border-radius: 5px;\n\n    &:hover {\n        background: ${({ theme }) => theme.primaryHover};\n    }\n`\n\nexport default SelectorItem","import styled from \"styled-components\";\n\nconst HeaderMenu = styled.nav`\n    display: flex;\n    background-color: ${({ theme }) => theme.primaryHover};\n    position: relative;\n    padding: 5px;\n    margin: 5px;\n    border-radius: 20px;\n\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport default HeaderMenu","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    margin: 5px;\n    border: 1px solid ${({ theme }) => theme.primaryLight};\n    border-radius: 10px;\n    border-spacing: 0;\n    width: auto;\n\n    th {\n        border-bottom: 1px solid ${({ theme }) => theme.primaryLight};\n        padding: 5px;\n    }\n\n    td {\n        border-top: 1px solid ${({ theme }) => theme.primaryLight};\n        padding: 5px;\n        white-space: nowrap;\n    }\n\n    td:first-child {\n        white-space: normal;\n    }\n`","// This helper checks if the user has the required permissions to access a certain section of the application.\n// The permissions are stored in the local storage and are fetched from the server when the user logs in.\n// \n\nexport const hasPermission = (permission, association_id = null) => {\n    const permissions = JSON.parse(localStorage.getItem('permissions') || '{}');\n\n    if (association_id === null) {\n        for (let assoc in permissions) {\n            if (permissions[assoc].includes(permission)) {\n                return true\n            }\n        }\n    } else {\n        if (permissions[association_id]?.includes(permission)) {\n            return true\n        }\n    }\n\n    return false\n}\n\nexport const hasAnyPermission = (permissions, association_id = null) => {\n    for (let permission of permissions) {\n        if (hasPermission(permission, association_id)) {\n            return true\n        }\n    }\n\n    return false\n}\n\nexport const hasAllPermissions = (permissions, association_id = null) => {\n    for (let permission of permissions) {\n        if (!hasPermission(permission, association_id)) {\n            return false\n        }\n    }\n\n    return true\n}"],"names":["StyledAdministration","styled","div","StyledView","StyledAssociations","AssociationSelector","_ref","associations","onSelect","_jsx","Selector","children","map","association","AssociationItem","Title","_ref2","onClick","useCallback","Association_ID","SelectorItem","AssociationForm","_ref3","members","reload","useEffect","document","getElementById","reset","selectedIndex","findIndex","member","FirstChair","Member_ID","Clerk","Treasurer","_jsxs","Form","id","FormBox","htmlFor","type","name","defaultValue","value","Forename","Surname","Button","async","e","preventDefault","_document$getElementB","_document$getElementB2","_document$getElementB3","title","firstchair","options","clerk","treasurer","undefined","updateAssociation","newAssociation","Associations","setAssociations","useState","Array","setMembers","selected","setSelected","fetchAssociations","_associations","getAssociations","fetchMembers","fetch","host","localStorage","getItem","then","response","json","data","find","Check","callback","IconContext","Provider","color","className","IoCheckmarkCircle","size","Circle","Deny","IoIosCloseCircle","_ref5","cx","cy","r","fill","StyledAssociationAssignment","StyledTableHeader","th","theme","mobile","StyledMobileTableHeader","Header","_Fragment","Assignment","member_id","association_id","initial","assigned","setAssigned","_assigned","AssignButton","AssociationAssignment","_associationassignmen","_associationassignmen2","associationassignment","setAssociationassignment","changedAssignment","setChangedAssignment","fetchAssociationassignment","getAssociationAssignments","assignments","assign","saveChanges","updateAssociationAssignments","Table","_member$Associations","Fullname","Assigned","StyledDateTemplates","DateTemplateSelector","datetemplates","datetemplate","DateTemplate","DateTemplate_ID","DateTemplateForm","usergroups","category_select","i","length","Category","usergroup","Usergroup_ID","cols","rows","Description","Type","Location","step","Begin","Departure","Leave_dep","description","category","location","begin","departure","leave_dep","usergroup_id","updateDateTemplate","newDateTemplate","DateTemplates","setDatetemplates","setUsergroups","fetchDatetemplates","_datetemplates","getDateTemplates","fetchUsergroups","_usergroups","getUsergroups","StyledScores","ScoreSelector","scores","sort","a","b","localeCompare","score","Score","Score_ID","ScoreForm","Link","link","updateScore","newScore","deleteScore","src","Scores","setScores","fetchScores","getScores","StyledUsergroupAssignment","StyledUsergroupLegend","UsergroupLegend","_ref4","UsergroupAssignment","_usergroupassignment$","_usergroupassignment$2","usergroupassignment","setUsergroupassignment","fetchUsergroupassignment","_usergroupassignment","getUsergroupAssignments","updateUsergroupAssignments","Usergroups","user","StyledUsergroups","UsergroupSelector","Usergroup","UsergroupForm","checked","Admin","Moderator","defaultChecked","Info","admin","moderator","info","console","log","updateUsergroup","newUsergroup","alert","deleteUsergroup","StyledRole","StyledRoleForm","form","primaryLight","primaryDark","RoleSelector","roles","RoleItem","role","role_id","role_name","RoleForm","onReload","permissions","setPermissions","forEach","permission","permission_name","includes","permission_id","Fragment","url","filter","method","body","JSON","stringify","ok","status","Roles","setRoles","fetchRoles","StyledRoleAssignment","StyledRoleAssignmentForm","hasPermission","RoleAssignEditor","_members$find2","assignedRoles","setAssignedRoles","label","onChange","_members$find","parseInt","target","Filter","checkboxes","querySelectorAll","role_ids","from","checkbox","RoleAssignment","assoc","View","view","views","Administration","setView","labels","hasAnyPermission","navigate","buttonNumber","split","isNaN","HeaderMenu","index","props","option","nav","primaryHover","table","arguments","parse","_permissions$associat"],"sourceRoot":""}