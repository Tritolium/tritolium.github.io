{"version":3,"file":"static/js/257.dbc32fc0.chunk.js","mappings":"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","sources":["components/dateplanner/attendenceInput/AttendenceTable.styled.js","components/dateplanner/attendenceInput/AttendenceTable.jsx","components/dateplanner/attendenceInput/DateField.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledAttendenceTable = styled.div`\n    display: grid;\n\n    .pending {\n        font-style: italic;\n        color: ${({theme}) => theme.yellow};\n    }\n\n    .sameDay {\n        border-top: 1px dashed ${({theme}) => theme.primaryHover};\n    }\n\n    .diffWeek {\n        border-top: 3px solid ${({theme}) => theme.primaryLight};\n`\n\nexport const StyledEvent = styled.div`\n    display: grid;\n    grid-template-columns: auto 64px min-content;\n    align-items: center;\n\n    border-top: 1px solid ${({theme}) => theme.primaryLight};\n    \n    .event_type {\n        grid-column-start: 1;\n        grid-row-start: 1;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_date {\n        grid-column-start: 1;\n        grid-row-start: 2;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_day {\n        grid-column-start: 1;\n        grid-row-start: 3;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .AttendenceInput {\n        grid-column-start: 2;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n\n    .PlusOne {\n        grid-column-start: 3;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n`\n\nexport const StyledMultiEvent = styled.div`\n    display: grid;\n    grid-template-columns: min-content auto 64px min-content;\n    align-items: center;\n\n    border-top: 1px solid ${({theme}) => theme.primaryLight};\n\n    img {\n        max-height: 64px;\n        grid-column-start: 1;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: start;\n    }\n    \n    .event_type {\n        grid-column-start: 2;\n        grid-row-start: 1;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_date {\n        grid-column-start: 2;\n        grid-row-start: 2;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_day {\n        grid-column-start: 2;\n        grid-row-start: 3;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .AttendenceInput {\n        grid-column-start: 3;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n\n    .PlusOne {\n        grid-column-start: 4;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n`","import DateField from './DateField'\nimport PlusOne from '../../../modules/components/icons/PlusOne'\n\nimport four from '../4.png'\nimport five from '../5.png'\nimport { useEffect, useState } from 'react'\nimport { updateAttendence } from '../../../modules/data/DBConnect'\nimport { StyledAttendenceTable, StyledEvent, StyledMultiEvent } from './AttendenceTable.styled'\nimport { EVENT_STATE } from '../../dateadministration/eventform/EventForm'\nimport { getWeeknumber } from '../../../modules/helper/DateFormat'\nimport { AttendenceInput } from './AttendenceInput'\n\nconst AttendenceTable = ({ attendences, states, selectedDateFilter, selectedEventFilter, theme}) => {\n\n    const [oneAssociation, setOneAssociation] = useState(true)\n    const [filteredAttendences, setFilteredAttendences] = useState(attendences)\n\n    useEffect(() => {\n        const firstAssociationId = attendences[0]?.Association_ID;\n        let oneAssociation = true;\n\n        for (let i = 1; i < attendences.length; i++) {\n            if (attendences[i].Association_ID !== firstAssociationId) {\n                oneAssociation = false;\n                break;\n            }\n        }\n\n        setOneAssociation(oneAssociation);\n    }, [attendences])\n\n    useEffect(() => {\n        // filter attendences\n        let filtered = attendences\n        .filter(attendence => {\n            let attDate = new Date(attendence.Date)\n            attDate.setHours(23,59,59,999)\n            let today = new Date()\n            return today <= attDate\n        })\n        .filter(attendence => {\n            switch(selectedEventFilter){\n            default:\n            case 'pending':\n                return attendence.Attendence === -1\n            case 'all':\n                return true\n            case 'practice':\n                return attendence.Category === 'practice'\n            case 'event':\n                return attendence.Category === 'event'\n            case 'other':\n                return attendence.Category === 'other'\n            }\n        })\n        .filter(attendence => {\n            let attDate = new Date(attendence.Date)\n            let today = new Date()\n            switch(selectedDateFilter){\n            default:\n            case 'all':\n                return true\n            case 'one':\n                return (attDate.getTime() - today.getTime()) < 1*604800000\n            case 'two':\n                return (attDate.getTime() - today.getTime()) < 2*604800000\n            case 'four':\n                return (attDate.getTime() - today.getTime()) < 4*604800000\n            case 'eight':\n                return (attDate.getTime() - today.getTime()) < 8*604800000                            \n            }\n        })\n        .filter(attendence => {\n            // TODO: remove check for 'Abgesagt' on 01.01.2025\n            return !attendence.Type.includes('Abgesagt') && attendence.State !== EVENT_STATE.CANCELED\n        })\n        setFilteredAttendences(filtered)\n    }, [attendences, selectedDateFilter, selectedEventFilter])\n\n    return(<>\n        <StyledAttendenceTable>\n            {filteredAttendences.map((att, i) => {\n                let flags = {sameDay: false, diffWeek: false}\n                if(i > 0){\n                    let prevDate = new Date(filteredAttendences[i-1].Date)\n                    let curDate = new Date(att.Date)\n                    flags.sameDay = prevDate.getDate() === curDate.getDate() && prevDate.getMonth() === curDate.getMonth() && prevDate.getFullYear() === curDate.getFullYear()\n                    flags.diffWeek = getWeeknumber(prevDate) !== getWeeknumber(curDate)\n                }\n\n                return(\n                    <Event key={att.Location + att.Event_ID} att={att} states={states} oneAssociation={oneAssociation} flags={flags} theme={theme} />\n                )})\n            }\n        </StyledAttendenceTable>\n        </>\n    )\n}\n\nconst Event = ({ att, oneAssociation, flags, theme }) => {\n\n    const [plusone, setPlusone] = useState(att.PlusOne)\n    const [attendence, setAttendence] = useState(att.Attendence)\n\n    const onClick = async (event_id, new_att) => {\n        await updateAttendence(event_id, new_att, plusone)\n        setAttendence(new_att)\n    }\n\n    const togglePlusOne = async () => {\n        if(attendence === 1){\n            await updateAttendence(att.Event_ID, attendence, !plusone)\n            setPlusone(!plusone)\n        }\n    }\n\n    let classname = att.State === 0 ? 'event pending' : 'event'\n\n    if (flags.sameDay) \n        classname += ' sameDay'\n    else if (flags.diffWeek)\n        classname += ' diffWeek'\n\n    if (oneAssociation) {\n        return(\n            <StyledEvent className={classname} key={att.Location + att.Event_ID}>\n                <DateField dateprops={att} />\n                <AttendenceInput event={att} attendence={attendence} onClick={onClick} theme={theme}/>\n                {att.Ev_PlusOne ? <PlusOne active={attendence === 1} plusOne={plusone} onClick={togglePlusOne} theme={theme} className=\"PlusOne\" /> : <></>}\n            </StyledEvent>\n        )\n    }\n\n    return(\n        <StyledMultiEvent className={classname} key={att.Location + att.Event_ID}>\n            {associationLogo(att.Association_ID)}\n            <DateField dateprops={att} />\n            <AttendenceInput event={att} attendence={attendence} onClick={onClick} theme={theme}/>\n            {att.Ev_PlusOne ? <PlusOne active={attendence === 1} plusOne={plusone} onClick={togglePlusOne} theme={theme} className=\"PlusOne\" /> : <></>}\n        </StyledMultiEvent>\n    )\n}\n\nconst associationLogo = (association_id) => {\n    const id = parseInt(association_id)\n    switch(id){\n    case 1:\n        return <img src={four} alt=\"Logo Rönk\"/>\n    case 2:\n        return <img src={five} alt=\"Logo Dün\"/>\n    case 3:\n        return <img src=\"https://sgv.de/assets/images/1/logo_sgv_web-fc5e97ec.svg\" alt=\"Logo SGV\" />\n    default:\n        return <></>\n    }\n}\n\nexport default AttendenceTable","const DateField = ({dateprops}) => {\n    const date = new Date(dateprops.Date)\n    const dayOfWeek = getDayOfWeek(date.getDay())\n\n    const day = date.getDate()\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    const prefix = dateprops.State === 0 ? \"Anfrage\": \"\"\n\n    return(<>\n        <div className=\"event_type\">{prefix} {dateprops.Type} {dateprops.Location}</div>\n        <div className=\"event_date\">{day}. {getMonthString(month)} {year}</div>\n        <div className=\"event_day\">{dayOfWeek}</div>\n    </>\n    )\n}\n\nconst getDayOfWeek = (d_o_w) => {\n    switch(d_o_w){\n    default:\n        return \"\"\n    case 0:\n        return \"Sonntag\"\n    case 1:\n        return \"Montag\"\n    case 2:\n        return \"Dienstag\"\n    case 3:\n        return \"Mittwoch\"\n    case 4:\n        return \"Donnerstag\"\n    case 5:\n        return \"Freitag\"\n    case 6:\n        return \"Samstag\"\n    }\n}\n\nconst getMonthString = (month) => {\n    switch(month){\n    default:\n        return \"\"\n    case 0:\n        return \"Januar\"\n    case 1:\n        return \"Februar\"\n    case 2:\n        return \"März\"\n    case 3:\n        return \"April\"\n    case 4:\n        return \"Mai\"\n    case 5:\n        return \"Juni\"\n    case 6:\n        return \"Juli\"\n    case 7:\n        return \"August\"\n    case 8:\n        return \"September\"\n    case 9:\n        return \"Oktober\"\n    case 10:\n        return \"November\"\n    case 11:\n        return \"Dezember\"\n    }\n}\n\nexport default DateField"],"names":["StyledAttendenceTable","styled","div","_ref","theme","yellow","_ref2","primaryHover","_ref3","primaryLight","StyledEvent","_ref4","StyledMultiEvent","_ref5","Event","att","oneAssociation","flags","plusone","setPlusone","useState","PlusOne","attendence","setAttendence","Attendence","onClick","async","event_id","new_att","updateAttendence","togglePlusOne","Event_ID","classname","State","sameDay","diffWeek","_jsxs","className","children","_jsx","DateField","dateprops","AttendenceInput","event","Ev_PlusOne","active","plusOne","_Fragment","Location","associationLogo","Association_ID","association_id","parseInt","src","four","alt","five","attendences","states","selectedDateFilter","selectedEventFilter","setOneAssociation","filteredAttendences","setFilteredAttendences","useEffect","_attendences$","firstAssociationId","i","length","filtered","filter","attDate","Date","setHours","Category","today","getTime","Type","includes","EVENT_STATE","CANCELED","map","prevDate","curDate","getDate","getMonth","getFullYear","getWeeknumber","getDayOfWeek","d_o_w","getMonthString","month","date","dayOfWeek","getDay","day","year","prefix"],"sourceRoot":""}