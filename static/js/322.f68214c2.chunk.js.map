{"version":3,"file":"static/js/322.f68214c2.chunk.js","mappings":"8LAIA,MAAMA,GAAkBC,EAAAA,EAAAA,OAAK,IAAM,wDAkE7BC,EAAOC,EAAAA,GAAOC,IAAI;;;;yBAICC,IAAA,IAAC,MAACC,GAAMD,EAAA,OAAKC,EAAMC,MAAM;;;;;;;;;;;;;;;;;EAmBlD,EAvFsBC,IAAc,IAAb,MAACF,GAAME,EAK1B,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAAIC,MAAM,KAKlDC,EAAoBC,IAAyBH,EAAAA,EAAAA,UAAS,QACtDI,EAAqBC,IAA0BL,EAAAA,EAAAA,UAAS,WAezDM,GAAqBC,EAAAA,EAAAA,cAAYC,IACnCL,EAAsBK,EAAEC,OAAOC,MAAM,GACtC,CAACP,IAEEQ,GAAsBJ,EAAAA,EAAAA,cAAYC,IACpCH,EAAuBG,EAAEC,OAAOC,OAChCE,QAAQC,IAAIL,EAAEC,OAAOC,MAAM,GAC5B,CAACL,IAMJ,OAJAS,EAAAA,EAAAA,YAAU,KAtBUC,WAChB,IAAIC,QAAqBC,EAAAA,EAAAA,WACLC,IAAjBF,GACCjB,EAAeiB,GAI4D,KAAhE,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcG,QAAOC,IAAyC,IAA3BA,EAAWC,aAAmBC,UAChEjB,EAAuB,OACvBkB,SAASC,eAAe,eAAed,MAAQ,MACnD,EAaAe,EAAa,GACd,KAGCC,EAAAA,EAAAA,MAACnC,EAAI,CAACoC,UAAU,YAAWC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,UAAQG,KAAK,cAAcC,GAAG,cAAcC,MAAM,eAAeC,SAAUrB,EAAoBiB,SAAA,EAC3FK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,UAASkB,SAAC,gBACxBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,MAAKkB,SAAC,UACpBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,WAAUkB,SAAC,mBACzBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,QAAOkB,SAAC,cACtBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,QAAOkB,SAAC,yBAE1BF,EAAAA,EAAAA,MAAA,UAAQG,KAAK,aAAaC,GAAG,aAAaC,MAAM,cAAcC,SAAU1B,EAAmBsB,SAAA,EACvFK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,MAAKkB,SAAC,UACpBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,MAAKkB,SAAC,aACpBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,MAAKkB,SAAC,cACpBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,OAAMkB,SAAC,cACrBK,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,QAAOkB,SAAC,oBAG9BK,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAAL,SAAK,qBAAoBA,UACzCK,EAAAA,EAAAA,KAAC5C,EAAe,CAACS,YAAaA,EAAaI,mBAAoBA,EAAoBE,oBAAqBA,EAAqBT,MAAOA,QAErI,C","sources":["components/dateplanner/attendenceInput/Termineingabe.js"],"sourcesContent":["import { lazy, Suspense, useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { getAttendences } from '../../../modules/data/DBConnect'\n\nconst AttendenceTable = lazy(() => import('./AttendenceTable'))\n\nconst Termineingabe = ({theme}) => {\n\n    /**\n     * fetched from server\n     */\n    const [attendences, setAttendences] = useState(new Array(0))\n\n    /**\n     * local states\n     */\n    const [selectedDateFilter, setSelectedDateFilter] = useState('all')\n    const [selectedEventFilter, setSelectedEventFilter] = useState('pending')\n\n    const fetchEvents = async () => {\n        let _attendences = await getAttendences()\n        if(_attendences !== undefined){\n            setAttendences(_attendences)\n        }\n\n        // if there are no attendences with attendence -1, use different event filter\n        if(_attendences?.filter(attendence => attendence.Attendence === -1).length === 0){\n            setSelectedEventFilter('all')\n            document.getElementById('eventSelect').value = 'all'\n        }\n    }\n\n    const onDateFilterChange = useCallback(e => {\n        setSelectedDateFilter(e.target.value)\n    }, [setSelectedDateFilter])\n\n    const onEventFilterChange = useCallback(e => {\n        setSelectedEventFilter(e.target.value)\n        console.log(e.target.value)\n    }, [setSelectedEventFilter])\n\n    useEffect(() => {\n        fetchEvents()\n    }, [])\n\n    return(\n        <Form className=\"DateInput\">\n            <div className='EventFilter'>\n                <select name='eventSelect' id='eventSelect' title='event select' onChange={onEventFilterChange}>\n                    <option value='pending'>Ausstehend</option>\n                    <option value='all'>Alle</option>\n                    <option value='practice'>Üben/Probe</option>\n                    <option value='event'>Auftritt</option>\n                    <option value='other'>Sonstige Termine</option>\n                </select>\n                <select name=\"dateSelect\" id=\"dateSelect\" title='date select' onChange={onDateFilterChange}>\n                    <option value=\"all\">Alle</option>\n                    <option value=\"one\">1 Woche</option>\n                    <option value=\"two\">2 Wochen</option>\n                    <option value=\"four\">4 Wochen</option>\n                    <option value=\"eight\">8 Wochen</option>\n                </select>\n            </div>\n            <Suspense fallback={<div>Tabelle lädt.</div>}>\n                <AttendenceTable attendences={attendences} selectedDateFilter={selectedDateFilter} selectedEventFilter={selectedEventFilter} theme={theme}/>\n            </Suspense>\n        </Form>\n    )\n}\n\nconst Form = styled.form`\n\n    flex-direction: column;\n\n    @media (max-width: ${({theme}) => theme.mobile}) {\n        padding-bottom: 2rem;\n    }\n    \n    box-sizing: border-box;\n\n    select {\n        padding: 2px;\n        margin: 2px;\n        border-radius: 5px;\n    }\n\n    .EventFilter {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n    }\n`\n\nexport default Termineingabe"],"names":["AttendenceTable","lazy","Form","styled","form","_ref2","theme","mobile","_ref","attendences","setAttendences","useState","Array","selectedDateFilter","setSelectedDateFilter","selectedEventFilter","setSelectedEventFilter","onDateFilterChange","useCallback","e","target","value","onEventFilterChange","console","log","useEffect","async","_attendences","getAttendences","undefined","filter","attendence","Attendence","length","document","getElementById","fetchEvents","_jsxs","className","children","name","id","title","onChange","_jsx","Suspense","fallback"],"sourceRoot":""}