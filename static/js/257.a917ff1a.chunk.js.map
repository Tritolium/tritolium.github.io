{"version":3,"file":"static/js/257.a917ff1a.chunk.js","mappings":"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","sources":["components/dateplanner/attendenceInput/AttendenceTable.styled.js","components/dateplanner/attendenceInput/AttendenceTable.jsx","components/dateplanner/attendenceInput/DateField.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledAttendenceTable = styled.div`\n    display: grid;\n`\n\nexport const StyledEvent = styled.div`\n    display: grid;\n    grid-template-columns: auto 64px 64px;\n    align-items: center;\n\n    border-top: 1px solid ${({theme}) => theme.primaryLight};\n    \n    .event_type {\n        grid-column-start: 1;\n        grid-row-start: 1;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_date {\n        grid-column-start: 1;\n        grid-row-start: 2;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_day {\n        grid-column-start: 1;\n        grid-row-start: 3;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .Terminzusage {\n        grid-column-start: 2;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n\n    .PlusOne {\n        grid-column-start: 3;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n`\n\nexport const StyledMultiEvent = styled.div`\n    display: grid;\n    grid-template-columns: auto auto [icon1 icon1];\n    align-items: center;\n\n    border-top: 1px solid ${({theme}) => theme.primaryLight};\n\n    img {\n        max-height: 64px;\n        grid-column-start: 1;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: start;\n    }\n    \n    .event_type {\n        grid-column-start: 2;\n        grid-row-start: 1;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_date {\n        grid-column-start: 2;\n        grid-row-start: 2;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .event_day {\n        grid-column-start: 2;\n        grid-row-start: 3;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .Terminzusage {\n        grid-column-start: 3;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n\n    .PlusOne {\n        grid-column-start: 4;\n        grid-row-start: 1;\n        grid-row-end: 4;\n        justify-self: end;\n    }\n`","import DateField from './DateField'\nimport Terminzusage from './Terminzusage'\nimport PlusOne from '../../../modules/components/icons/PlusOne'\n\nimport four from '../4.png'\nimport five from '../5.png'\nimport { useEffect, useState } from 'react'\nimport { updateAttendence } from '../../../modules/data/DBConnect'\nimport { StyledAttendenceTable, StyledEvent, StyledMultiEvent } from './AttendenceTable.styled'\n\nconst AttendenceTable = ({ attendences, states, selectedDateFilter, selectedEventFilter, theme}) => {\n\n    const [oneAssociation, setOneAssociation] = useState(true)\n    const [filteredAttendences, setFilteredAttendences] = useState(attendences)\n\n    useEffect(() => {\n        const firstAssociationId = attendences[0]?.Association_ID;\n        let oneAssociation = true;\n\n        for (let i = 1; i < attendences.length; i++) {\n            if (attendences[i].Association_ID !== firstAssociationId) {\n                oneAssociation = false;\n                break;\n            }\n        }\n\n        setOneAssociation(oneAssociation);\n    }, [attendences])\n\n    useEffect(() => {\n        // filter attendences\n        let filtered = attendences\n        .filter(attendence => {\n            let attDate = new Date(attendence.Date)\n            attDate.setHours(23,59,59,999)\n            let today = new Date()\n            return today <= attDate\n        })\n        .filter(attendence => {\n            switch(selectedEventFilter){\n            default:\n            case 'all':\n                return true\n            case 'practice':\n                return attendence.Category === 'practice'\n            case 'event':\n                return attendence.Category === 'event'\n            case 'other':\n                return attendence.Category === 'other'\n            }\n        })\n        .filter(attendence => {\n            let attDate = new Date(attendence.Date)\n            let today = new Date()\n            switch(selectedDateFilter){\n            default:\n            case 'all':\n                return true\n            case 'one':\n                return (attDate.getTime() - today.getTime()) < 1*604800000\n            case 'two':\n                return (attDate.getTime() - today.getTime()) < 2*604800000\n            case 'four':\n                return (attDate.getTime() - today.getTime()) < 4*604800000\n            case 'eight':\n                return (attDate.getTime() - today.getTime()) < 8*604800000                            \n            }\n        })\n        setFilteredAttendences(filtered)\n    }, [attendences, selectedDateFilter, selectedEventFilter])\n\n    return(<>\n        <StyledAttendenceTable>\n            {filteredAttendences.map((att) => {\n                return(\n                    <Event key={att.Location + att.Event_ID} att={att} states={states} oneAssociation={oneAssociation} theme={theme} />\n                )})\n            }\n        </StyledAttendenceTable>\n        </>\n    )\n}\n\nconst Event = ({ att, states, oneAssociation, theme }) => {\n    const [plusone, setPlusone] = useState(att.PlusOne)\n    const [attendence, setAttendence] = useState(att.Attendence)\n\n    const onClick = async () => {\n        let newAttendence = (attendence + 1) % states\n        await updateAttendence(att.Event_ID, newAttendence, plusone)\n        setAttendence(newAttendence)\n    }\n\n    const togglePlusOne = async () => {\n        if(attendence === 1){\n            await updateAttendence(att.Event_ID, attendence, !plusone)\n            setPlusone(!plusone)\n        }\n\n    }\n\n    if (oneAssociation) {\n        return(\n            <StyledEvent className='event' key={att.Location + att.Event_ID}>\n                <DateField dateprops={att} />\n                <Terminzusage event={att} states={states} attendence={attendence} onClick={onClick} event_id={att.Event_ID} cancelled={att.Type.includes('Abgesagt')} theme={theme}/>\n                {att.Ev_PlusOne ? <PlusOne active={attendence === 1} plusOne={plusone} onClick={togglePlusOne} theme={theme} className=\"PlusOne\" /> : <></>}\n            </StyledEvent>\n        )\n    }\n\n    return(\n        <StyledMultiEvent className='event' key={att.Location + att.Event_ID}>\n            {associationLogo(att.Association_ID)}\n            <DateField dateprops={att} />\n            <Terminzusage event={att} states={states} attendence={attendence} onClick={onClick} event_id={att.Event_ID} cancelled={att.Type.includes('Abgesagt')} theme={theme}/>\n            {att.Ev_PlusOne ? <PlusOne active={attendence === 1} plusOne={plusone} onClick={togglePlusOne} theme={theme} className=\"PlusOne\" /> : <></>}\n        </StyledMultiEvent>\n    )\n}\n\nconst associationLogo = (association_id) => {\n    const id = parseInt(association_id)\n    switch(id){\n    case 1:\n        return <img src={four} alt=\"Logo Rönk\"/>\n    case 2:\n        return <img src={five} alt=\"Logo Dün\"/>\n    case 3:\n        return <img src=\"https://sgv.de/assets/images/1/logo_sgv_web-fc5e97ec.svg\" alt=\"Logo SGV\" />\n    default:\n        return <></>\n    }\n}\n\nexport default AttendenceTable","const DateField = ({dateprops}) => {\n    const date = new Date(dateprops.Date)\n    const dayOfWeek = getDayOfWeek(date.getDay())\n\n    const day = date.getDate()\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    return(<>\n        <div className=\"event_type\">{dateprops.Type} {dateprops.Location}</div>\n        <div className=\"event_date\">{day}. {getMonthString(month)} {year}</div>\n        <div className=\"event_day\">{dayOfWeek}</div>\n    </>\n    )\n}\n\nconst getDayOfWeek = (d_o_w) => {\n    switch(d_o_w){\n    default:\n        return \"\"\n    case 0:\n        return \"Sonntag\"\n    case 1:\n        return \"Montag\"\n    case 2:\n        return \"Dienstag\"\n    case 3:\n        return \"Mittwoch\"\n    case 4:\n        return \"Donnerstag\"\n    case 5:\n        return \"Freitag\"\n    case 6:\n        return \"Samstag\"\n    }\n}\n\nconst getMonthString = (month) => {\n    switch(month){\n    default:\n        return \"\"\n    case 0:\n        return \"Januar\"\n    case 1:\n        return \"Februar\"\n    case 2:\n        return \"März\"\n    case 3:\n        return \"April\"\n    case 4:\n        return \"Mai\"\n    case 5:\n        return \"Juni\"\n    case 6:\n        return \"Juli\"\n    case 7:\n        return \"August\"\n    case 8:\n        return \"September\"\n    case 9:\n        return \"Oktober\"\n    case 10:\n        return \"November\"\n    case 11:\n        return \"Dezember\"\n    }\n}\n\nexport default DateField"],"names":["StyledAttendenceTable","styled","div","_templateObject","_taggedTemplateLiteral","StyledEvent","_templateObject2","_ref","theme","primaryLight","StyledMultiEvent","_templateObject3","_ref2","Event","att","states","oneAssociation","plusone","setPlusone","useState","PlusOne","attendence","setAttendence","Attendence","onClick","async","newAttendence","updateAttendence","Event_ID","togglePlusOne","_jsxs","className","children","_jsx","DateField","dateprops","Terminzusage","event","event_id","cancelled","Type","includes","Ev_PlusOne","active","plusOne","_Fragment","Location","associationLogo","Association_ID","association_id","parseInt","src","four","alt","five","attendences","selectedDateFilter","selectedEventFilter","setOneAssociation","filteredAttendences","setFilteredAttendences","useEffect","_attendences$","firstAssociationId","i","length","filtered","filter","attDate","Date","setHours","Category","today","getTime","map","getDayOfWeek","d_o_w","getMonthString","month","date","dayOfWeek","getDay","day","getDate","getMonth","year","getFullYear"],"sourceRoot":""}