{"version":3,"file":"static/js/880.a8eb3211.chunk.js","mappings":"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","sources":["components/dateplanner/attendenceInput/DateField.js","components/dateplanner/overview/Overview.styled.js","components/dateplanner/overview/EvalDiagram.js","components/dateplanner/overview/OverviewTable.jsx","components/dateplanner/overview/Overview.js"],"sourcesContent":["const DateField = ({dateprops}) => {\n    const date = new Date(dateprops.Date)\n    const dayOfWeek = getDayOfWeek(date.getDay())\n\n    const day = date.getDate()\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    return(\n        <div>{dateprops.Type} {dateprops.Location}<br />{day}. {getMonthString(month)} {year}<br />{dayOfWeek}</div>\n    )\n}\n\nconst getDayOfWeek = (d_o_w) => {\n    switch(d_o_w){\n    default:\n        return \"\"\n    case 0:\n        return \"Sonntag\"\n    case 1:\n        return \"Montag\"\n    case 2:\n        return \"Dienstag\"\n    case 3:\n        return \"Mittwoch\"\n    case 4:\n        return \"Donnerstag\"\n    case 5:\n        return \"Freitag\"\n    case 6:\n        return \"Samstag\"\n    }\n}\n\nconst getMonthString = (month) => {\n    switch(month){\n    default:\n        return \"\"\n    case 0:\n        return \"Januar\"\n    case 1:\n        return \"Februar\"\n    case 2:\n        return \"MÃ¤rz\"\n    case 3:\n        return \"April\"\n    case 4:\n        return \"Mai\"\n    case 5:\n        return \"Juni\"\n    case 6:\n        return \"Juli\"\n    case 7:\n        return \"August\"\n    case 8:\n        return \"September\"\n    case 9:\n        return \"Oktober\"\n    case 10:\n        return \"November\"\n    case 11:\n        return \"Dezember\"\n    }\n}\n\nexport default DateField","import styled from \"styled-components\";\n\nexport const StyledOverview = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    margin: auto;\n    align-items: center;\n\n    select {\n        width: fit-content;\n    }\n`\n\nexport const StyledOverviewTable = styled.div`\n    display: grid;\n    border-bottom: 1px solid ${({ theme }) => theme.primaryLight};\n\n    .Date {\n        grid-row: 1;\n    }\n\n    .NameTag {\n        grid-row: 1;\n        font-weight: bold;\n        padding: 2px;\n        cursor: pointer;\n    }\n\n    .NameTagActive {\n        grid-row: 1;\n        font-weight: bold;\n        padding: 2px;\n        cursor: pointer;\n        background-color: ${({ theme }) => theme.primaryLight};\n        color: ${({ theme }) => theme.primaryDark};\n        border-radius: 5px;\n        border: 1px solid ${({ theme }) => theme.primaryDark};\n        cursor: pointer;\n    }\n\n    .DateTag {\n        text-align: center;\n        border-left: 1px solid ${({ theme }) => theme.primaryLight};\n        border-top: 1px solid ${({ theme }) => theme.primaryLight};\n    }\n\n    .AttendenceTag {\n        position: relative;\n        min-width: 32px;\n        min-height: 32px;\n        padding: 5px;\n\n        border-left: 1px solid ${({ theme }) => theme.primaryLight};\n        border-top: 1px solid ${({ theme }) => theme.primaryLight};\n\n        :nth-child(1) {\n            z-index: 3;\n        }\n    }\n\n    .Last {\n        border-right: 1px solid ${({ theme }) => theme.primaryLight};\n    }\n\n    .IconWrapper {\n        width: 32px;\n        height: 32px;\n        position: absolute;\n\n        left: 50%;\n        top: 50%;\n\n        transform: translateX(-50%) translateY(-50%);\n    }\n\n    .PlusOneIcon {\n        width: 18px;\n    }\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledEvalTable = styled.table`\n    border-collapse: collapse;\n    position: relative;\n    margin: 0 2px 0 2px;\n\n    tr {\n        max-height: 100px;\n    }\n\n    td {\n        text-align: center;\n        border: 1px solid ${({ theme }) => theme.primaryLight};\n\n        > img {\n            min-width: 15px;\n            width: 100%;\n            max-width: 30px;\n        }\n    }\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        thead, td {\n            display: none;\n        }\n    }\n`\n\nexport const StyledEvalDiagram = styled.div`\n    @media (min-width: ${({theme}) => theme.mobile}) {\n        div {\n            display: none;\n        }\n    }\n`","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js'\nimport { Bar } from \"react-chartjs-2\"\nimport DateField from '../attendenceInput/DateField';\nimport { StyledEvalDiagram } from './Overview.styled';\n\nconst EvalDiagram = ({ event, theme }) => {\n\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        Title,\n        Tooltip,\n        Legend\n      )\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n          title: {\n            display: false,\n          },\n          legend: {\n            display: false\n          }\n        },\n        responsive: false,\n        scales: {\n          x: {\n            stacked: true,\n            display: false\n          },\n          y: {\n            stacked: true,\n          },\n        },\n      };\n\n    const labels = ['']\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                data: [event.Consent],\n                backgroundColor: theme.greenRGB\n            },\n            {\n                data: [event.Missing],\n                backgroundColor: theme.blueRGB\n            },\n            {\n                data: [event.Maybe],\n                backgroundColor: theme.yellowRGB\n            },\n            {\n                data: [event.Refusal],\n                backgroundColor: theme.redRGB\n            }\n        ],\n    }\n\n    return(\n        <StyledEvalDiagram>\n            <DateField dateprops={event}/>\n            <Bar height={\"60px\"} options={options} data={data} />\n        </StyledEvalDiagram>\n    )\n}\n\nexport default EvalDiagram","import { Fragment, useState } from \"react\"\nimport DateField from \"../attendenceInput/DateField\"\nimport { StyledOverviewTable } from \"./Overview.styled\"\nimport { Zusage } from \"./Overview\"\n\nexport const OverviewTable = ({attendences, theme}) => {\n    return(<StyledOverviewTable>\n            <span className=\"Date\">Termin:</span>\n            {attendences[0].Attendences.map((att) => {\n                return(<NameTag key={att.Fullname} Fullname={att.Fullname}/>)\n            })}\n            {attendences.map(event => {\n                return(<Fragment key={`row_${event.Event_ID}`}>\n                    <span key={event.Event_ID} className=\"DateTag\"><DateField dateprops={event}/></span>\n                    {event.Attendences.map((attendence, index) => {\n                        const className = index === event.Attendences.length - 1 ? \"AttendenceTag Last\" : \"AttendenceTag\"\n                        return(<span key={attendence.Fullname + event.Event_ID} className={className}><Zusage attendence={attendence.Attendence} plusone={attendence.PlusOne} theme={theme}/></span>)\n                    })}\n                </Fragment>)\n            })}\n        </StyledOverviewTable>)\n}\n\nconst NameTag = ({ Fullname }) => {    \n    const [showTooltip, setShowTooltip] = useState(false)\n\n    const initials = Fullname.split(' ')[0].slice(0, 2) + Fullname.split(' ')[1][0]\n\n    const toggleTooltip = () => {\n        setShowTooltip(!showTooltip)\n    }\n\n    return(\n        <span className={showTooltip ? \"NameTagActive\" : \"NameTag\"} onClick={toggleTooltip}>{showTooltip ? Fullname : initials}</span>\n    )\n}","import { useCallback, useEffect, useState } from \"react\"\n\nimport { getAllAttendences, getEvalByUsergroup, getOwnUsergroups } from '../../../modules/data/DBConnect'\n\nimport DateField from \"../attendenceInput/DateField\"\nimport { StyledEvalTable, StyledOverview } from \"./Overview.styled\"\nimport EvalDiagram from \"./EvalDiagram\"\nimport { Alert, Blank, Check, Deny, PlusOne } from \"../attendenceInput/Terminzusage\"\nimport { IoReload } from \"react-icons/io5\"\nimport { OverviewTable } from \"./OverviewTable\"\n\nconst Overview = ({ theme }) => {\n\n    const [usergroups, setUsergroups] = useState(new Array(0))\n    const [selectedUsergroup_ID, setSelectedUsergroup_ID] = useState()\n\n    const [attendences, setAttendences] = useState(new Array(0))\n    const [evaluation, setEvaluation] = useState(new Array(0))\n\n    const fetchUsergroups = async () => {\n        let _usergroups = await getOwnUsergroups()\n        setUsergroups(_usergroups)\n    }\n\n    const fetchAttendences = useCallback(async () => {\n        let _attendences = await getAllAttendences(selectedUsergroup_ID)\n        setAttendences(_attendences)\n    }, [selectedUsergroup_ID])\n\n    const fetchEval = useCallback(async () => {\n        let _eval = await getEvalByUsergroup(selectedUsergroup_ID)\n        setEvaluation(_eval)\n    }, [selectedUsergroup_ID])\n\n    const onUsergroupChange = useCallback((e) => {\n        setSelectedUsergroup_ID(e.target.value)\n    }, [setSelectedUsergroup_ID])\n\n    const reload = useCallback(() => {\n        fetchAttendences()\n        fetchEval()\n    }, [fetchAttendences, fetchEval])\n\n    useEffect(() => {\n        fetchUsergroups()\n        reload()\n    }, [reload])\n\n    if(attendences.length === 0){\n        return(\n            <select name=\"usergroup\" id=\"usergroup_select\" onChange={onUsergroupChange}>\n                {usergroups.map((usergroup, index) => {\n                    return(<option key={index} value={usergroup.Usergroup_ID}>{usergroup.Title}</option>)\n                })}\n            </select>\n        )\n    } else {\n        return(\n            <StyledOverview>\n                <div>\n                    <select name=\"usergroup\" id=\"usergroup_select\" onChange={onUsergroupChange}>\n                        {usergroups.map((usergroup, index) => {\n                            return(<option key={index} value={usergroup.Usergroup_ID}>{usergroup.Title}</option>)\n                        })}\n                    </select>\n                    <IoReload onClick={reload}/>\n                </div>\n                <OverviewTable attendences={attendences} theme={theme}/>\n                <EvalTable evaluation={evaluation} theme={theme}/>\n            {/*Fehlende RÃ¼ckmeldungen:*/}\n            {/*missingFeedback.map(missing => {\n                return(<div>{missing.Forename} {missing.Surname}</div>)\n            })*/}\n            </StyledOverview>\n        )\n    }\n}\n\nexport const Zusage = ({attendence, plusone, theme}) => {\n    if(attendence === 1 && plusone === 1)\n        return(<PlusOne theme={theme} className=\"PlusOneIcon\"/>)\n\n    switch(attendence){\n    default:\n    case -1:\n        return(<Blank theme={theme}/>)\n    case 0:\n        return(<Deny theme={theme}/>)\n    case 1:\n        return(<Check theme={theme}/>)\n    case 2:\n        return(<Alert theme={theme}/>)\n    }\n}\n\n\n\nconst EvalTable = ({evaluation, theme}) => {\n    return(\n        <StyledEvalTable>\n            <thead>\n                <tr>\n                    <th>Termin</th>\n                    <th colSpan={2}>Zu.</th>\n                    <th>Ab.</th>\n                    <th>Aus.</th>\n                    <th>Vllt.</th>\n                    <th>M</th>\n                    <th>S</th>\n                    <th>A</th>\n                    <th>D</th>\n                    <th>T</th>\n                    <th>L</th>\n                    <th>Tr</th>\n                    <th>B</th>\n                    <th>P</th>\n                </tr>\n            </thead>\n            <tbody>\n                {evaluation.map(event => {\n                    return(<EvalRow event={event} key={`eval_${event.Event_ID}`} theme={theme}/>)\n                })}\n            </tbody>\n        </StyledEvalTable>\n    )\n}\n\nconst EvalRow = ({ event, theme }) => {\n    return(\n        <tr>\n            <td><DateField dateprops={event} /></td>\n            <td colSpan={event.PlusOne ? 1 : 2}>{event.Consent}</td>\n            {event.PlusOne ? <td>+{event.PlusOne}</td> : <></>}\n            <td>{event.Refusal}</td>\n            <td>{event.Missing}</td>\n            <td>{event.Maybe}</td>\n            <td>{event.Instruments.Major}</td>\n            <td>{event.Instruments.Sopran}</td>\n            <td>{event.Instruments.Diskant}</td>\n            <td>{event.Instruments.Alt}</td>\n            <td>{event.Instruments.Tenor}</td>\n            <td>{event.Instruments.Lyra}</td>\n            <td>{event.Instruments.Trommel}</td>\n            <td>{event.Instruments.Becken}</td>\n            <td>{event.Instruments.Pauke}</td>\n            <EvalDiagram event={event} theme={theme}/>\n        </tr>\n    )\n}\n\nexport default Overview"],"names":["getDayOfWeek","d_o_w","getMonthString","month","_ref","dateprops","date","Date","dayOfWeek","getDay","day","getDate","getMonth","year","getFullYear","_jsxs","children","Type","Location","_jsx","StyledOverview","styled","div","_templateObject","_taggedTemplateLiteral","StyledOverviewTable","_templateObject2","theme","primaryLight","_ref2","_ref3","primaryDark","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","mobile","StyledEvalTable","table","_templateObject3","_ref11","_ref12","StyledEvalDiagram","_templateObject4","_ref13","event","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","data","labels","datasets","Consent","backgroundColor","greenRGB","Missing","blueRGB","Maybe","yellowRGB","Refusal","redRGB","DateField","Bar","height","options","indexAxis","plugins","title","display","legend","responsive","scales","x","stacked","y","OverviewTable","attendences","className","Attendences","map","att","NameTag","Fullname","Fragment","Event_ID","attendence","index","length","Zusage","Attendence","plusone","PlusOne","concat","showTooltip","setShowTooltip","useState","initials","split","slice","onClick","toggleTooltip","Blank","Deny","Check","Alert","EvalTable","evaluation","colSpan","EvalRow","_Fragment","Instruments","Major","Sopran","Diskant","Alt","Tenor","Lyra","Trommel","Becken","Pauke","EvalDiagram","usergroups","setUsergroups","Array","selectedUsergroup_ID","setSelectedUsergroup_ID","setAttendences","setEvaluation","fetchAttendences","useCallback","async","_attendences","getAllAttendences","fetchEval","_eval","getEvalByUsergroup","onUsergroupChange","e","target","value","reload","useEffect","_usergroups","getOwnUsergroups","fetchUsergroups","name","id","onChange","usergroup","Usergroup_ID","IoReload"],"sourceRoot":""}