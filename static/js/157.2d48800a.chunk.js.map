{"version":3,"file":"static/js/157.2d48800a.chunk.js","mappings":"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","sources":["components/dateplanner/attendenceInput/DateField.js","components/dateplanner/overview/Overview.styled.js","components/dateplanner/overview/EvalDiagram.js","components/dateplanner/overview/Overview.js"],"sourcesContent":["const DateField = ({dateprops}) => {\n    const date = new Date(dateprops.Date)\n    const dayOfWeek = getDayOfWeek(date.getDay())\n\n    const day = date.getDate()\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    return(\n        <div>{dateprops.Type} {dateprops.Location}<br />{day}. {getMonthString(month)} {year}<br />{dayOfWeek}</div>\n    )\n}\n\nconst getDayOfWeek = (d_o_w) => {\n    switch(d_o_w){\n    default:\n        return \"\"\n    case 0:\n        return \"Sonntag\"\n    case 1:\n        return \"Montag\"\n    case 2:\n        return \"Dienstag\"\n    case 3:\n        return \"Mittwoch\"\n    case 4:\n        return \"Donnerstag\"\n    case 5:\n        return \"Freitag\"\n    case 6:\n        return \"Samstag\"\n    }\n}\n\nconst getMonthString = (month) => {\n    switch(month){\n    default:\n        return \"\"\n    case 0:\n        return \"Januar\"\n    case 1:\n        return \"Februar\"\n    case 2:\n        return \"MÃ¤rz\"\n    case 3:\n        return \"April\"\n    case 4:\n        return \"Mai\"\n    case 5:\n        return \"Juni\"\n    case 6:\n        return \"Juli\"\n    case 7:\n        return \"August\"\n    case 8:\n        return \"September\"\n    case 9:\n        return \"Oktober\"\n    case 10:\n        return \"November\"\n    case 11:\n        return \"Dezember\"\n    }\n}\n\nexport default DateField","import styled from \"styled-components\";\n\nexport const StyledOverview = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    margin: auto;\n    align-items: center;\n\n    select {\n        width: fit-content;\n    }\n`\n\nexport const StyledOverviewTable = styled.table`\n\n    table-layout: fixed;\n\n    border-collapse: collapse;\n    position: relative;\n    overflow: scroll;\n    align-self: flex-start;\n    margin: 0 2px 0 2px;\n\n    tbody {\n        overflow-x: scroll;\n    }\n\n    td {\n        border: 1px solid ${({ theme }) => theme.primaryLight};\n        padding: 2px;\n        text-align: center;\n        position: relative;\n        min-width: 32px;\n\n        :nth-child(1) {\n            z-index: 3;\n        }\n\n        :nth-child(1) {\n            z-index: 2;\n        }\n        \n        .IconWrapper {\n            min-width: 1.5em;\n            max-width: 32px;\n            min-height: 1.5em;\n            max-height: 32px;\n            position: absolute;\n\n            transform: translateX(-50%) translateY(-50%);\n        }\n    }\n\n    th {\n        min-width: 15px;\n        max-width: 40px;\n    }\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledEvalTable = styled.table`\n    border-collapse: collapse;\n    position: relative;\n    margin: 0 2px 0 2px;\n\n    tr {\n        max-height: 100px;\n    }\n\n    td {\n        text-align: center;\n        border: 1px solid ${({ theme }) => theme.primaryLight};\n\n        > img {\n            min-width: 15px;\n            width: 100%;\n            max-width: 30px;\n        }\n    }\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        thead, td {\n            display: none;\n        }\n    }\n`\n\nexport const StyledEvalDiagram = styled.div`\n    @media (min-width: ${({theme}) => theme.mobile}) {\n        div {\n            display: none;\n        }\n    }\n`","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js'\nimport { Bar } from \"react-chartjs-2\"\nimport DateField from '../attendenceInput/DateField';\nimport { StyledEvalDiagram } from './Overview.styled';\n\nconst EvalDiagram = ({ event }) => {\n\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        Title,\n        Tooltip,\n        Legend\n      )\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n          title: {\n            display: false,\n          },\n          legend: {\n            display: false\n          }\n        },\n        responsive: false,\n        scales: {\n          x: {\n            stacked: true,\n            display: false\n          },\n          y: {\n            stacked: true,\n          },\n        },\n      };\n\n    const labels = ['']\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                data: [event.Consent],\n                backgroundColor: 'rgb(0, 186, 0)'\n            },\n            {\n                data: [event.Missing],\n                backgroundColor: 'rgb(37, 183, 211)'\n            },\n            {\n                data: [event.Maybe],\n                backgroundColor: 'rgb(255, 161, 31)'\n            },\n            {\n                data: [event.Refusal],\n                backgroundColor: 'rgb(255, 0, 0)'\n            }\n        ],\n    }\n\n    return(\n        <StyledEvalDiagram>\n            <DateField dateprops={event}/>\n            <Bar height={\"60px\"} options={options} data={data} />\n        </StyledEvalDiagram>\n    )\n}\n\nexport default EvalDiagram","import { useCallback, useEffect, useState } from \"react\"\n\nimport { getAllAttendences, getEvalByUsergroup, getOwnUsergroups } from '../../../modules/data/DBConnect'\n\nimport DateField from \"../attendenceInput/DateField\"\nimport { StyledEvalTable, StyledOverview, StyledOverviewTable } from \"./Overview.styled\"\nimport EvalDiagram from \"./EvalDiagram\"\nimport { Alert, Blank, Check, Deny } from \"../attendenceInput/Terminzusage\"\nimport { IoReload } from \"react-icons/io5\"\n\nconst Overview = () => {\n\n    const [usergroups, setUsergroups] = useState(new Array(0))\n    const [selectedUsergroup_ID, setSelectedUsergroup_ID] = useState()\n\n    const [attendences, setAttendences] = useState(new Array(0))\n    const [evaluation, setEvaluation] = useState(new Array(0))\n    //const [missingFeedback, setMissingFeedback] = useState(new Array(0))\n\n    const fetchUsergroups = async () => {\n        let _usergroups = await getOwnUsergroups()\n        setUsergroups(_usergroups)\n    }\n\n    const fetchAttendences = useCallback(async () => {\n        let _attendences = await getAllAttendences(selectedUsergroup_ID)\n        setAttendences(_attendences)\n    }, [selectedUsergroup_ID])\n\n    /*\n    const fetchMissingFeedback = async () => {\n        let _missingFeedback = await getMissingFeedback()\n        setMissingFeedback(_missingFeedback)\n    }\n    */\n\n    const fetchEval = useCallback(async () => {\n        let _eval = await getEvalByUsergroup(selectedUsergroup_ID)\n        setEvaluation(_eval)\n    }, [selectedUsergroup_ID])\n\n    const onUsergroupChange = useCallback((e) => {\n        setSelectedUsergroup_ID(e.target.value)\n    }, [setSelectedUsergroup_ID])\n\n    const reload = useCallback(() => {\n        fetchAttendences()\n        fetchEval()\n    }, [fetchAttendences, fetchEval])\n\n    useEffect(() => {\n        fetchUsergroups()\n        reload()\n    }, [reload])\n\n    if(attendences.length === 0){\n        return(\n            <select name=\"usergroup\" id=\"usergroup_select\" onChange={onUsergroupChange}>\n                {usergroups.map((usergroup, index) => {\n                    return(<option key={index} value={usergroup.Usergroup_ID}>{usergroup.Title}</option>)\n                })}\n            </select>\n        )\n    } else {\n        return(\n            <StyledOverview>\n                <div>\n                    <select name=\"usergroup\" id=\"usergroup_select\" onChange={onUsergroupChange}>\n                        {usergroups.map((usergroup, index) => {\n                            return(<option key={index} value={usergroup.Usergroup_ID}>{usergroup.Title}</option>)\n                        })}\n                    </select>\n                    <IoReload onClick={reload}/>\n                </div>\n                <OverviewTable attendences={attendences}/>\n                <EvalTable evaluation={evaluation}/>\n            {/*Fehlende RÃ¼ckmeldungen:*/}\n            {/*missingFeedback.map(missing => {\n                return(<div>{missing.Forename} {missing.Surname}</div>)\n            })*/}\n            </StyledOverview>\n        )\n    }\n}\n\nconst Zusage = ({attendence}) => {\n    switch(attendence){\n    default:\n    case -1:\n        return(<Blank/>)\n    case 0:\n        return(<Deny />)\n    case 1:\n        return(<Check />)\n    case 2:\n        return(<Alert />)\n    }\n}\n\nconst OverviewTable = ({attendences}) => {\n    return(\n        <StyledOverviewTable>\n            <thead>\n                <tr>\n                    <th>Termin:</th>\n                    {attendences[0].Attendences.map((att) => {\n                        return(<th key={att.Fullname}>{att.Fullname.split(' ')[0].slice(0, 2)}{att.Fullname.split(' ')[1][0]}</th>)\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    attendences.map(event => {\n                        return(\n                            <tr key={event.Event_ID}>\n                                <td><DateField dateprops={event}/></td>\n                                {event.Attendences.map(attendence => {\n                                    return(<td key={attendence.Fullname + event.Event_ID}><Zusage attendence={attendence.Attendence} /></td>)\n                                })}\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            </StyledOverviewTable>\n    )\n}\n\nconst EvalTable = ({evaluation}) => {\n    return(\n        <StyledEvalTable>\n            <thead>\n                <th>Termin</th>\n                <th>Zu.</th>\n                <th>Ab.</th>\n                <th>Aus.</th>\n                <th>Vllt.</th>\n                <th>M</th>\n                <th>S</th>\n                <th>D</th>\n                <th>A</th>\n                <th>T</th>\n                <th>L</th>\n                <th>Tr</th>\n                <th>B</th>\n                <th>P</th>\n            </thead>\n            <tbody>\n                {evaluation.map(event => {\n                    return(<EvalRow event={event} key={`eval_${event.Event_ID}`}/>)\n                })}\n            </tbody>\n        </StyledEvalTable>\n    )\n}\n\nconst EvalRow = ({ event }) => {\n    return(\n        <tr>\n            <td><DateField dateprops={event} /></td>\n            <td>{event.Consent}</td>\n            <td>{event.Refusal}</td>\n            <td>{event.Missing}</td>\n            <td>{event.Maybe}</td>\n            <td>{event.Instruments.Major}</td>\n            <td>{event.Instruments.Sopran}</td>\n            <td>{event.Instruments.Diskant}</td>\n            <td>{event.Instruments.Alt}</td>\n            <td>{event.Instruments.Tenor}</td>\n            <td>{event.Instruments.Lyra}</td>\n            <td>{event.Instruments.Trommel}</td>\n            <td>{event.Instruments.Becken}</td>\n            <td>{event.Instruments.Pauke}</td>\n            <EvalDiagram event={event}/>\n        </tr>\n    )\n}\n\nexport default Overview"],"names":["getDayOfWeek","d_o_w","getMonthString","month","_ref","dateprops","date","Date","dayOfWeek","getDay","day","getDate","getMonth","year","getFullYear","_jsxs","children","Type","Location","_jsx","StyledOverview","styled","div","_templateObject","_taggedTemplateLiteral","StyledOverviewTable","table","_templateObject2","theme","primaryLight","_ref2","mobile","StyledEvalTable","_templateObject3","_ref3","_ref4","StyledEvalDiagram","_templateObject4","_ref5","event","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","data","labels","datasets","Consent","backgroundColor","Missing","Maybe","Refusal","DateField","Bar","height","options","indexAxis","plugins","title","display","legend","responsive","scales","x","stacked","y","Zusage","attendence","Blank","Deny","Check","Alert","OverviewTable","attendences","Attendences","map","att","Fullname","split","slice","Attendence","Event_ID","EvalTable","_ref6","evaluation","EvalRow","concat","_ref7","Instruments","Major","Sopran","Diskant","Alt","Tenor","Lyra","Trommel","Becken","Pauke","EvalDiagram","_useState","useState","Array","_useState2","_slicedToArray","usergroups","setUsergroups","_useState3","_useState4","selectedUsergroup_ID","setSelectedUsergroup_ID","_useState5","_useState6","setAttendences","_useState7","_useState8","setEvaluation","fetchUsergroups","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_usergroups","wrap","_context","prev","next","getOwnUsergroups","sent","stop","apply","arguments","fetchAttendences","useCallback","_callee2","_attendences","_context2","getAllAttendences","fetchEval","_callee3","_eval","_context3","getEvalByUsergroup","onUsergroupChange","e","target","value","reload","useEffect","length","name","id","onChange","usergroup","index","Usergroup_ID","IoReload","onClick"],"sourceRoot":""}