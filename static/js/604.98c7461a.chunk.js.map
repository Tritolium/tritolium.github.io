{"version":3,"file":"static/js/604.98c7461a.chunk.js","mappings":"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","sources":["components/orderadministration/OrderAdministration.styled.js","components/orderadministration/Orders.jsx","components/orderadministration/OrderAdministration.jsx","modules/components/Filter.js","modules/components/button/Button.js","modules/components/form/Form.js","modules/components/form/FormBox.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledOrderAdministration = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${({theme}) => theme.mobile}) {\n        align-items: center;\n    }\n    align-items: stretch;\n    \n    select {\n        width: fit-content;\n        align-self: center;\n    }\n\n    #thead-desktop {\n        display: none;\n        @media (min-width: ${({theme}) => theme.mobile}) {\n            display: table-header-group;\n        }\n    }\n\n    #thead-mobile {\n        display: table-header-group;\n        @media (min-width: ${({theme}) => theme.mobile}) {\n            display: none;\n        }\n    }\n\n    table {\n        @media (min-width: ${({theme}) => theme.mobile}) {\n            width: fit-content;\n\n            th {\n                padding: 5px;\n            }\n        }\n        \n        td {\n            text-align: center;\n        }\n    }\n`","import { BsFillCheckCircleFill } from 'react-icons/bs'\nimport { MdPendingActions } from 'react-icons/md'\nimport { TbTruckDelivery } from 'react-icons/tb'\nimport Button from '../../modules/components/button/Button'\n\nconst Orders = ({ orders, reload, own }) => {\n\n    let auth_level = localStorage.getItem('auth_level')\n\n    return(orders.map(order => {\n            return(<tr key={`order_${order.Order_ID}`}>\n                {!own ? <td>{order.Forename} {order.Surname[0]}.</td> : <></>}\n                <td>{order.Article}</td>\n                <td>{order.Size}</td>\n                <td>{order.Count}</td>\n                <td>{order.Placed}</td>\n                <td>{order.Ordered}</td>\n                <td>{order.Info}</td>\n                <td><OrderState state={order.Order_State}/></td>\n                {auth_level > 1 ? <UpdateOrder order={order} reload={reload}/> : <></>}\n            </tr>)\n        })\n    )\n}\n\nconst OrderState = ({ state }) => {\n    switch(state){\n    default:\n    case 0:\n        return <MdPendingActions />\n    case 1:\n        return <TbTruckDelivery />\n    case 2:\n        return <BsFillCheckCircleFill />\n    }\n}\n\nconst UpdateOrder = ({ order, reload }) => {\n\n    const update = async () => {\n        let host = (process.env.NODE_ENV !== 'production') ? 'http://localhost' : ''\n        let token = localStorage.getItem('api_token')\n        await fetch(`${host}/api/order.php?api_token=${token}&id=${order.Order_ID}`,\n        {\n            method: 'PUT',\n            body: JSON.stringify({\n                Order_State: order.Order_State\n            })\n        })\n        reload()\n    }\n\n    switch(order.Order_State){\n    case 0:\n        return(<td><Button onClick={update}>bestellt?</Button></td>)\n    case 1:\n        return(<td><Button onClick={update}>geliefert?</Button></td>)\n    default:\n        return(<></>)\n    }\n}\n\nexport default Orders","import { useCallback, useEffect, useState } from \"react\"\nimport { BsCalendarDate, BsCalendarDateFill, BsFillPersonFill, BsFillQuestionCircleFill, BsHash } from \"react-icons/bs\"\nimport { GiMatterStates } from \"react-icons/gi\"\nimport { IoIosResize } from \"react-icons/io\"\nimport { TbNote } from \"react-icons/tb\"\nimport Button from \"../../modules/components/button/Button\"\nimport Filter from \"../../modules/components/Filter\"\nimport Form from \"../../modules/components/form/Form\"\nimport FormBox from \"../../modules/components/form/FormBox\"\nimport { StyledOrderAdministration } from \"./OrderAdministration.styled\"\nimport Orders from \"./Orders\"\n\nconst OrderAdministration = () => {\n\n    const options = [\n        {value: \"own\", label: \"Eigen\"},\n        {value: \"all\", label: \"Alle\"}\n    ]\n\n    let host = (process.env.NODE_ENV !== 'production') ? 'http://localhost' : ''\n    let token = localStorage.getItem('api_token')\n    let auth_level = localStorage.getItem('auth_level')\n\n    const [orders, setOrders] = useState(new Array(0))\n    const [filter, setFilter] = useState(options[0].value)\n\n    const fetchOrders = useCallback(async () => {\n        let url = (filter === 'own') ? `${host}/api/order.php?api_token=${token}&own` : `${host}/api/order.php?api_token=${token}`\n        fetch(url)\n            .then(response => {\n                if (!response.ok)\n                    throw new Error(response.status)\n                return response.json()\n            }).then(json => {\n                setOrders(json)\n            }, () => {\n                setOrders(new Array(0))\n            }).catch(error => {\n                //alert(error.message)\n            })\n    }, [host, token, filter])\n\n    const onFilterChange = useCallback((e) => {\n        setFilter(e.target.value)\n    }, [setFilter])\n\n    const reload = useCallback(() => {\n        fetchOrders()\n    }, [fetchOrders])\n\n    useEffect(() => {\n        fetchOrders()\n    }, [fetchOrders])\n\n    return(<StyledOrderAdministration>\n        {auth_level > 1 ? <Filter options={options} onChange={onFilterChange}/> : <></>}\n        {orders.length ? <OrderList orders={orders} reload={reload} own={(filter === 'own')}/> : <></>}\n        <OrderForm reload={reload}/>\n    </StyledOrderAdministration>)\n}\n\nconst OrderList = ({ orders, reload, own }) => {\n    return(<table>\n        <thead id=\"thead-desktop\">\n            <tr>\n                {!own ? <th>Name</th> : <></>}\n                <th>Artikel</th>\n                <th>Größe</th>\n                <th>Anzahl</th>\n                <th>Angefordert am</th>\n                <th>Bestellt am</th>\n                <th>Notiz</th>\n                <th>Status</th>\n            </tr>\n        </thead>\n        <thead id=\"thead-mobile\">\n            <tr>\n                {!own ? <th><BsFillPersonFill /></th> : <></>}\n                <th><BsFillQuestionCircleFill /></th>\n                <th><IoIosResize /></th>\n                <th><BsHash /></th>\n                <th><BsCalendarDate /></th>\n                <th><BsCalendarDateFill /></th>\n                <th><TbNote /></th>\n                <th><GiMatterStates /></th>\n            </tr>\n        </thead>\n        <tbody>\n            <Orders orders={orders} reload={reload} own={own}/>\n        </tbody>\n    </table>)\n}\n\nconst OrderForm = ({ reload }) => {\n\n    let host = (process.env.NODE_ENV !== 'production') ? 'http://localhost' : ''\n    let token = localStorage.getItem('api_token')\n\n    const cancel = (e) => {\n        e.preventDefault()\n        document.getElementById('order_form').reset()\n    }\n\n    const submit = (e) => {\n        e.preventDefault()\n        let article = document.getElementById('article').value\n        let size = document.getElementById('size').value\n        let count = document.getElementById('count').value\n        let info = document.getElementById('info').value\n\n        fetch(`${host}/api/order.php?api_token=${token}`,\n        {\n            method: \"POST\",\n            body: JSON.stringify({\n                Article: article,\n                Size: size,\n                Count: count,\n                Info: info\n            })\n        }\n        )\n        .then(response => {\n            if (!response.ok)\n                throw new Error(response.status)\n            reload()\n            alert(\"Bestellung eingereicht\")\n            document.getElementById('order_form').reset()\n        }).catch(error => {\n            alert(error)\n        })\n    }\n\n    return(<div>\n        <Form id=\"order_form\" onsubmit={submit}>\n            <FormBox>\n                <label htmlFor=\"article\">Was?</label>\n                <input type=\"text\" name=\"article\" id=\"article\" />\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"size\">Größe?</label>\n                <input type=\"text\" name=\"size\" id=\"size\" />\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"count\">Anzahl?</label>\n                <input type=\"number\" name=\"count\" id=\"count\" />\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"info\">Notiz</label>\n                <input type=\"text\" name=\"info\" id=\"info\" />\n            </FormBox>\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={submit}>Anfragen</Button>\n            </div>\n        </Form>\n    </div>)\n}\n\nexport default OrderAdministration","import { useCallback } from \"react\"\n\nconst Filter = (props) => {\n\n    const onChange = useCallback((e) => {\n        props.onChange(e)\n    }, [props])\n\n    return(\n        <select onChange={onChange}>\n            {props.options.map((option, index) => {\n                return(\n                    <option value={option.value} key={index}>{option.label}</option>\n                )\n            })}\n        </select>\n    )\n}\n\nexport default Filter","import styled from \"styled-components\"\n\nconst Button = styled.button`\n    font-size: ${({font_size}) => font_size};\n    font-weight: bold;\n    letter-spacing: 0.05rem;\n    color: ${({theme}) => theme.primaryDark};\n    background: ${({theme}) => theme.primaryLight};\n    border: none;\n    border-radius: 15px;\n    padding: 2px 5px;\n    margin: 2px;\n    text-align: center;\n    transition: color 0.3s linear\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        font-size: ${({font_size}) => font_size};\n        text-align: center;\n    }\n\n    &:hover {\n        color: ${({ theme }) => theme.primaryHover};\n    }\n`\n\nexport default Button","import styled from \"styled-components\"\n\nconst Form = styled.form`\n    display: block;\n    width: 100%;\n    padding: 5px;\n`\n\nexport default Form","import styled from \"styled-components\";\n\nconst FormBox = styled.div`\n    display: block;\n    padding: 2px;\n    label {\n        float: left;\n        width: 25%;\n        min-width: 100px;\n    }\n`\n\nexport default FormBox"],"names":["StyledOrderAdministration","styled","theme","mobile","OrderState","state","UpdateOrder","order","reload","update","token","localStorage","getItem","fetch","Order_ID","method","body","JSON","stringify","Order_State","Button","onClick","orders","own","auth_level","map","Forename","Surname","Article","Size","Count","Placed","Ordered","Info","OrderList","id","OrderForm","submit","e","preventDefault","article","document","getElementById","value","size","count","info","then","response","ok","Error","status","alert","reset","catch","error","Form","onsubmit","FormBox","htmlFor","type","name","options","label","useState","Array","setOrders","filter","setFilter","fetchOrders","useCallback","url","json","onFilterChange","target","useEffect","Filter","onChange","length","props","option","index","font_size","primaryDark","primaryLight","primaryHover"],"sourceRoot":""}