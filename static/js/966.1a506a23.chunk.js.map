{"version":3,"file":"static/js/966.1a506a23.chunk.js","mappings":"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","sources":["components/administration/Administration.styled.js","components/administration/association/Associations.styled.js","components/administration/association/Associations.js","icons/Icons.js","components/administration/associationassignment/AssociationAssignment.styled.js","components/administration/associationassignment/AssociationAssignment.js","components/administration/datetemplates/DateTemplates.styled.js","components/administration/datetemplates/DateTemplates.js","components/administration/scores/Scores.styled.js","components/administration/scores/Scores.js","components/administration/usergroupassignment/UsergroupAssignment.styled.js","components/administration/usergroupassignment/UsergroupAssignment.js","components/administration/usergroups/Usergroups.styled.js","components/administration/usergroups/Usergroups.js","components/administration/Administration.js","modules/components/form/Form.js","modules/components/form/FormBox.js","modules/components/form/Selector.js","modules/components/form/SelectorItem.js","modules/components/headermenu/HeaderMenu.js","modules/components/overview/Table.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledAdministration = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const StyledView = styled.div`\n    width: 100%;\n`","import styled from \"styled-components\";\n\nexport const StyledAssociations = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useEffect, useState } from \"react\"\nimport { useCallback } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { getAssociations, getMembers, newAssociation, updateAssociation } from \"../../../modules/data/DBConnect\"\nimport { StyledAssociations } from \"./Associations.styled\"\n\nconst Associations = () => {\n\n    const [associations, setAssociations] = useState(new Array(0))\n    const [members, setMembers] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const fetchAssociations = useCallback(async () => {\n        let _associations = await getAssociations()\n        if(_associations !== undefined)\n            setAssociations(_associations)\n        else\n            setAssociations(new Array(0))\n    }, [])\n\n    const fetchMembers = useCallback(async () => {\n        let _members = await getMembers()\n        if(_members !== undefined)\n            setMembers(_members)\n        else\n            setMembers(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchAssociations()\n        fetchMembers()\n    }, [fetchAssociations, fetchMembers])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchAssociations()\n        fetchMembers()\n    }, [fetchAssociations, fetchMembers])\n\n    return (\n        <StyledAssociations>\n            <AssociationSelector onSelect={onSelect} associations={associations}/>\n            <AssociationForm association={associations.find((association) => association.Association_ID === selected)} members={members} reload={reload}/>\n        </StyledAssociations>\n    )\n}\n\nconst AssociationSelector = ({ associations, onSelect}) => {\n    return(\n        <Selector>\n            {associations.map(association => {\n                return(<AssociationItem onSelect={onSelect} key={association.Title} association={association} />)\n            })}\n        </Selector>\n    )\n}\n\nconst AssociationItem = ({ association, onSelect }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(association.Association_ID)\n    }, [onSelect, association.Association_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {association.Title}\n        </SelectorItem>\n    )\n}\n\nconst AssociationForm = ({ association, members, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('association_form').reset()\n        document.getElementById('firstchair').selectedIndex = members?.findIndex(member => association?.FirstChair === member.Member_ID)\n        document.getElementById('clerk').selectedIndex = members?.findIndex(member => association?.Clerk === member.Member_ID)\n        document.getElementById('treasurer').selectedIndex = members?.findIndex(member => association?.Treasurer === member.Member_ID)\n    })\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title       = document.getElementById('title').value\n        let firstchair  = document.getElementById('firstchair').options[document.getElementById('firstchair').selectedIndex]?.value\n        let clerk       = document.getElementById('clerk').options[document.getElementById('clerk').selectedIndex]?.value\n        let treasurer   = document.getElementById('treasurer').options[document.getElementById('treasurer').selectedIndex]?.value\n\n        if(association !== undefined)\n            await updateAssociation(association.Association_ID, title, firstchair, clerk, treasurer)\n        else\n            await newAssociation(title, firstchair, clerk, treasurer)\n        \n        reload()\n    }\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    return(\n        <Form id=\"association_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Vereinsname:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={association?.Title} />\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"firstchair\">Vorsitz:</label>\n                <select id=\"firstchair\">\n                    {members.map(member => {\n                        return(<option key={`fcmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"clerk\">Schrift-/Geschäftsführer/-in:</label>\n                <select id=\"clerk\">\n                    {members.map(member => {\n                        return(<option key={`clmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"treasurer\">Kassierer/-in:</label>\n                <select id=\"treasurer\">\n                    {members.map(member => {\n                        return(<option key={`trmember_${member.Member_ID}`} value={member.Member_ID}>{member.Forename} {member.Surname}</option>)\n                    })}\n                </select>  \n            </FormBox>\n\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default Associations","import { IconContext } from \"react-icons\"\nimport { IoIosAlert, IoIosCloseCircle } from 'react-icons/io'\nimport { IoCheckmarkCircle } from 'react-icons/io5'\n\nexport const Blank = ({ callback, size }) => {\n    //#24b9d0\n    return(\n        <IconContext.Provider value={{color: \"#24b9d0\", className: \"IconWrapper\"}}>\n            <IoIosAlert size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Check = ({ callback }) => {\n    //#00bd00\n    return(\n        <IconContext.Provider value={{color: \"#00bd00\", className: \"IconWrapper\"}}>\n            <IoCheckmarkCircle size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Deny = ({ callback }) => {\n    //#fe423e\n    return(\n        <IconContext.Provider value={{color: \"#fe423e\", className: \"IconWrapper\"}}>\n            <IoIosCloseCircle size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nexport const Alert = ({ callback }) => {\n    //#ffa11c\n    return(\n        <IconContext.Provider value={{color: \"#ffa11c\", className: \"IconWrapper\"}}>\n            <IoIosAlert size=\"100%\" onClick={callback}/>\n            <Circle callback={callback} />\n        </IconContext.Provider>\n    )\n}\n\nconst Circle = ({ callback }) => {\n    return(<svg size=\"100%\" className='IconWrapper'><circle cx=\"50%\" cy=\"50%\" r=\"35%\" fill='white' onClick={callback}/></svg>)\n}","import styled from \"styled-components\";\n\nexport const StyledAssociationAssignment = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    max-width: 100%;\n\n    img {\n        max-height: 1.5rem;\n    }\n\n    td {\n        text-align: center;\n        :nth-child(1) {\n            z-index: 2;\n        }\n    }\n\n    button {\n        width: fit-content;\n        align-self: center;\n    }\n\n    .IconWrapper {\n        max-height: 1.8rem;\n        max-width: 1.8rem;\n        position: absolute;\n        transform: translateX(-50%) translateY(-50%);\n    }\n\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nexport const StyledTableHeader = styled.th`\n    display: table-cell;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledMobileTableHeader = styled.th`\n    display: none;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: table-cell;\n    }\n`\n\nexport const StyledUsergroupLegend = styled.div`\n    display: none;\n\n    padding: 5px;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: flex;\n        flex-direction: column;\n    }\n`","import { useCallback, useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { Check, Deny } from \"../../../icons/Icons\"\nimport Button from \"../../../modules/components/button/Button\"\nimport { Table } from \"../../../modules/components/overview/Table\"\nimport { getAssociationAssignments, updateAssociationAssignments } from \"../../../modules/data/DBConnect\"\nimport { StyledAssociationAssignment, StyledMobileTableHeader, StyledTableHeader } from \"./AssociationAssignment.styled\"\n\nconst AssociationAssignment = () => {\n\n    const [associationassignment, setAssociationassignment] = useState(new Array(0))\n    const [changedAssignment, setChangedAssignment] = useState({})\n\n    const fetchAssociationassignment = useCallback(async () => {\n        getAssociationAssignments().then(assignments => {\n            if(assignments !== undefined)\n                setAssociationassignment(assignments)\n        })\n    }, [])\n\n    const onClick = useCallback((member_id, association_id, assigned) => {\n        let assign = {...changedAssignment}\n        if(assign[`${member_id}`] === undefined)\n            assign[`${member_id}`] = {}\n        \n        assign[`${member_id}`][`${association_id}`] = assigned\n\n        setChangedAssignment(assign)\n    }, [changedAssignment])\n\n    const saveChanges = useCallback(() => {\n        updateAssociationAssignments(changedAssignment)\n    }, [changedAssignment])\n\n    useEffect(() => {\n        fetchAssociationassignment()\n    }, [fetchAssociationassignment])\n\n    return(<StyledAssociationAssignment>\n        <Button onClick={saveChanges}>Speichern</Button>\n        <Table>\n            <thead>\n                <tr>\n                    <th>Name:</th>\n                    {associationassignment[0]?.Associations?.map(association => {\n                        return(\n                            <Header key={`h_${association.Association_ID}`} association={association}/>\n                        )\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {associationassignment.map(member => {\n                    return(\n                        <tr key={member.Member_ID}>\n                            <td>{member.Fullname}</td>\n                            {member.Associations?.map(association => {\n                                return(\n                                    <Assignment key={`${association.Association_ID}_${member.Member_ID}`} member_id={member.Member_ID} association_id={association.Association_ID} initial={association.Assigned} onClick={onClick}/>\n                                )\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n    </StyledAssociationAssignment>)\n}\n\nconst Header = ({ association }) => {\n    return (\n        <>\n            <StyledTableHeader>{association.Title}</StyledTableHeader>\n            <StyledMobileTableHeader>{association.Association_ID}</StyledMobileTableHeader>\n        </>\n    )\n}\n\nconst Assignment = ({ member_id, association_id, initial, onClick }) => {\n\n    const [assigned, setAssigned] = useState(initial)\n\n    const callback = useCallback(() => {\n        let _assigned = !assigned\n        setAssigned(_assigned)\n        onClick(member_id, association_id, _assigned)\n    }, [assigned, member_id, association_id, onClick])\n\n    return (\n        <AssignButton assigned={assigned} callback={callback}/>\n    )\n}\n\nconst AssignButton = ({ assigned, callback }) => {\n    return(\n        <td onClick={callback}>{assigned ? <Check /> : <Deny />}</td>\n    )\n}\n\nexport default AssociationAssignment","import styled from \"styled-components\";\n\nexport const StyledDateTemplates = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { getDateTemplates, getUsergroups, newDateTemplate, updateDateTemplate } from \"../../../modules/data/DBConnect\"\nimport { StyledDateTemplates } from \"./DateTemplates.styled\"\n\nconst DateTemplates = () => {\n\n    const [datetemplates, setDatetemplates] = useState(new Array(0))\n    const [usergroups, setUsergroups] = useState(new Array(0))\n\n    const [selected, setSelected] = useState(-1)\n\n    const fetchDatetemplates = useCallback(async () => {\n        let _datetemplates = await getDateTemplates()\n        if(_datetemplates !== undefined)\n            setDatetemplates(_datetemplates)\n        else\n            setDatetemplates(new Array(0))\n    }, [])\n\n    const fetchUsergroups = useCallback(async () => {\n        let _usergroups = await getUsergroups()\n        if(_usergroups !== undefined)\n            setUsergroups(_usergroups)\n        else\n            setUsergroups(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchDatetemplates()\n    }, [fetchDatetemplates])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchDatetemplates()\n        fetchUsergroups()\n    }, [fetchDatetemplates, fetchUsergroups])\n\n    return (\n        <StyledDateTemplates>\n            <DateTemplateSelector onSelect={onSelect} datetemplates={datetemplates} />\n            <DateTemplateForm datetemplate={datetemplates.find((datetemplate) => datetemplate.DateTemplate_ID === selected)} usergroups={usergroups} reload={reload} />\n        </StyledDateTemplates>\n    )\n}\n\nconst DateTemplateSelector = ({ datetemplates, onSelect}) => {\n    return (\n        <Selector>\n            {datetemplates.map(datetemplate => {\n                return(<DateTemplate onSelect={onSelect} key={datetemplate.Title} datetemplate={datetemplate}/>)\n            })}\n        </Selector>\n    )\n}\n\nconst DateTemplate = ({ onSelect, datetemplate }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(datetemplate.DateTemplate_ID)\n    }, [onSelect, datetemplate.DateTemplate_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {datetemplate.Title}\n        </SelectorItem>\n    )\n}\n\nconst DateTemplateForm = ({ datetemplate, usergroups, reload }) => {\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title           = document.getElementById('title').value\n        let description     = document.getElementById('description').value\n        let category        = document.getElementById('category').options[document.getElementById('category').selectedIndex].value\n        let type            = document.getElementById('type').value\n        let location        = document.getElementById('location').value\n        let begin           = document.getElementById('begin').value\n        let departure       = document.getElementById('departure').value\n        let leave_dep       = document.getElementById('leave_dep').value\n        let usergroup_id    = document.getElementById('usergroup').options[document.getElementById('usergroup').selectedIndex].value\n\n        if(datetemplate !== undefined)\n            await updateDateTemplate(datetemplate.DateTemplate_ID, title, description, category, type, location, begin, departure, leave_dep, usergroup_id)\n        else\n            await newDateTemplate(title, description, category, type, location, begin, departure, leave_dep, usergroup_id)\n\n        reload()\n    }\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    useEffect(() => {\n        document.getElementById('datetemplate_form').reset()\n        let category_select = document.getElementById('category')\n        for(let i = 0; i < category_select.options.length; i++){\n            if(category_select.options[i].value === datetemplate?.Category)\n                category_select.selectedIndex = i\n        } \n        document.getElementById('usergroup').selectedIndex = usergroups?.findIndex(usergroup => usergroup?.Usergroup_ID === datetemplate?.Usergroup_ID)\n    }, [datetemplate, usergroups])\n\n    return (\n        <Form id=\"datetemplate_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Bezeichnung:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={datetemplate?.Title}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"description\">Beschreibung</label>\n                <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"3\" defaultValue={datetemplate === undefined ? \"\" : datetemplate.Description}></textarea>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"category\">Art:</label>\n                <select name=\"category\" id=\"category\">\n                    <option value=\"event\">Auftritt</option>\n                    <option value=\"practice\">Üben/Probe</option>\n                    <option value=\"other\">Sonstiges</option>\n                </select>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"type\">Bezeichnung:</label>\n                <input type=\"text\" name=\"type\" id=\"type\" defaultValue={datetemplate?.Type}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"location\">Ort:</label>\n                <input type=\"text\" name=\"location\" id=\"location\" defaultValue={datetemplate?.Location}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"begin\">Startzeit:</label>\n                <input type=\"time\" name=\"begin\" id=\"begin\" step=\"1\" defaultValue={datetemplate?.Begin}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"departure\">Abfahrt:</label>\n                <input type=\"time\" name=\"departure\" id=\"departure\" step=\"1\" defaultValue={datetemplate?.Departure}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"leave_dep\">Rückfahrt:</label>\n                <input type=\"time\" name=\"leave_dep\" id=\"leave_dep\" step=\"1\" defaultValue={datetemplate?.Leave_dep}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"usergroup\">Sichtbarkeit:</label>\n                <select name=\"usergroup\" id=\"usergroup\">\n                    {usergroups.map(usergroup => {\n                        return(<option value={usergroup.Usergroup_ID} key={usergroup.Title}>{usergroup.Title}</option>)\n                    })}\n                </select>\n            </FormBox>\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default DateTemplates","import styled from \"styled-components\";\n\nexport const StyledScores = styled.div`\n    padding-left: env(safe-area-inset-left);\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n\n    iframe {\n        width: 100%;\n        aspect-ratio: 210/297;\n    }\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { deleteScore, getScores, newScore, updateScore } from \"../../../modules/data/DBConnect\"\nimport { StyledScores } from \"./Scores.styled\"\n\nconst Scores = () => {\n\n    const [scores, setScores] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n    \n    const fetchScores = useCallback(async () => {\n        let scores = await getScores()\n        if(scores !== undefined)\n            setScores(scores)\n        else\n            setScores(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchScores()\n    }, [fetchScores])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        fetchScores()\n    }, [fetchScores])\n\n    return(<StyledScores>\n        <ScoreSelector scores={scores} onSelect={onSelect}/>\n        <ScoreForm score={scores.find((score) => score.Score_ID === selected)} reload={reload}/>\n    </StyledScores>)\n}\n\nconst ScoreSelector = ({ scores, onSelect }) => {\n    return(\n        <Selector>\n            {scores\n            .sort((a, b) => a.Title.localeCompare(b.Title))\n            .map(score => {\n                return(<Score onSelect={onSelect} key={score.Score_ID} score={score}/>)\n            })}\n        </Selector>\n    )\n}\n\nconst Score = ({ onSelect, score }) => {\n\n    const onClick = useCallback(() => {\n        onSelect(score.Score_ID)\n    }, [onSelect, score])\n\n    return(<SelectorItem onClick={onClick}>\n        {score.Title}\n    </SelectorItem>)\n}\n\nconst ScoreForm = ({ score, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('score_form').reset()\n    }, [score])\n\n    const cancel = (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title = document.getElementById('title').value\n        let link = document.getElementById('link').value\n\n        if(score !== undefined)\n            await updateScore(score.Score_ID, title, link)\n        else\n            newScore(title, link)\n        \n        document.getElementById('score_form').reset()\n        reload()\n    }\n\n    const deleteSC = async (e) => {\n        e.preventDefault()\n        if(score !== undefined)\n            await deleteScore(score.Score_ID)\n        reload()\n    }\n\n    return(<Form id=\"score_form\">\n        <FormBox>\n            <label htmlFor=\"title\">Name:</label>\n            <input type=\"text\" name=\"title\" id=\"title\" defaultValue={score?.Title} />\n        </FormBox>\n        <FormBox>\n            <label htmlFor=\"link\">Link:</label>\n            <input type=\"url\" name=\"link\" id=\"link\" defaultValue={score?.Link} />\n        </FormBox>\n        <div>\n            <Button onClick={cancel}>Abbrechen</Button>\n            <Button onClick={update}>Speichern</Button>\n            <Button onClick={deleteSC}>Löschen</Button>\n        </div>\n        {score?.Link ? <iframe title=\"score_view\" src={score?.Link}></iframe> : <></>}\n    </Form>)\n}\n\nexport default Scores","import styled from \"styled-components\";\n\nexport const StyledUsergroupAssignment = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    max-width: 100%;\n\n    img {\n        max-height: 1.5rem;\n    }\n\n    td {\n        text-align: center;\n        :nth-child(1) {\n            z-index: 2;\n        }\n    }\n\n    button {\n        width: fit-content;\n        align-self: center;\n    }\n\n    .IconWrapper {\n        max-height: 1.8rem;\n        max-width: 1.8rem;\n        position: absolute;\n        transform: translateX(-50%) translateY(-50%);\n    }\n\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nexport const StyledTableHeader = styled.th`\n    display: table-cell;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: none;\n    }\n`\n\nexport const StyledMobileTableHeader = styled.th`\n    display: none;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: table-cell;\n    }\n`\n\nexport const StyledUsergroupLegend = styled.div`\n    display: none;\n\n    padding: 5px;\n    \n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        display: flex;\n        flex-direction: column;\n    }\n`","import { useCallback, useEffect, useState } from \"react\"\nimport { Table } from \"../../../modules/components/overview/Table\"\nimport { getUsergroupAssignments, updateUsergroupAssignments } from \"../../../modules/data/DBConnect\"\nimport { StyledMobileTableHeader, StyledTableHeader, StyledUsergroupAssignment, StyledUsergroupLegend } from \"./UsergroupAssignment.styled\"\n\nimport Button from \"../../../modules/components/button/Button\"\nimport { Check, Deny } from \"../../../icons/Icons\"\n\nconst UsergroupAssignment = () => {\n\n    const [usergroupassignment, setUsergroupassignment] = useState(new Array(0))\n    const [changedAssignment, setChangedAssignment] = useState({})\n\n    const fetchUsergroupassignment = useCallback(async () => {\n        let _usergroupassignment = await getUsergroupAssignments()\n        if(_usergroupassignment !== undefined)\n            setUsergroupassignment(_usergroupassignment)\n        else\n            setUsergroupassignment(new Array(0))\n    }, [])\n\n    const onClick = useCallback((member_id, usergroup_id, assigned) => {\n        let assign = {...changedAssignment}\n        if(assign[`${member_id}`] === undefined)\n            assign[`${member_id}`] = {}\n        \n        assign[`${member_id}`][`${usergroup_id}`] = assigned\n\n        setChangedAssignment(assign)\n    }, [changedAssignment])\n\n    const saveChanges = useCallback(() => {\n        updateUsergroupAssignments(changedAssignment)\n    }, [changedAssignment])\n\n    useEffect(() => {\n        fetchUsergroupassignment()\n    }, [fetchUsergroupassignment])\n\n    return(\n        <StyledUsergroupAssignment>\n            <Button onClick={saveChanges}>Speichern</Button>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Name:</th>\n                        {usergroupassignment[0]?.Usergroups.map(usergroup => {\n                            return(\n                                <Header key={`h_${usergroup.Usergroup_ID}`} usergroup={usergroup} />\n                            )\n                        })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {usergroupassignment.map(user => {\n                        return (\n                            <tr key={user.Member_ID}>\n                                <td>{user.Fullname}</td>\n                                {user.Usergroups.map(usergroup => {\n                                    return(\n                                        <Assignment key={`${usergroup.Usergroup_ID}_${user.Member_ID}`} member_id={user.Member_ID} usergroup_id={usergroup.Usergroup_ID} initial={usergroup.Assigned} onClick={onClick}/>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n            <UsergroupLegend usergroups={usergroupassignment[0]?.Usergroups}/>\n        </StyledUsergroupAssignment>\n    )\n}\n\nconst Header = ({ usergroup }) => {\n    return (\n        <>\n            <StyledTableHeader>{usergroup.Title}</StyledTableHeader>\n            <StyledMobileTableHeader>{usergroup.Usergroup_ID}</StyledMobileTableHeader>\n        </>\n    )\n}\n\nconst Assignment = ({ member_id, usergroup_id, initial, onClick }) => {\n\n    const [assigned, setAssigned] = useState(initial)\n\n    const callback = useCallback(() => {\n        let _assigned = !assigned\n        setAssigned(_assigned)\n        onClick(member_id, usergroup_id, _assigned)\n    }, [assigned, member_id, usergroup_id, onClick])\n\n    return (\n        <AssignButton assigned={assigned} callback={callback}/>\n    )\n}\n\nconst AssignButton = ({ assigned, callback }) => {\n    return(\n        <td onClick={callback}>{assigned ? <Check /> : <Deny />}</td>\n    )\n}\n\nconst UsergroupLegend = ({ usergroups }) => {\n    return(\n        <StyledUsergroupLegend>\n            {usergroups?.map(usergroup => {\n                return(<div key={`${usergroup.Usergroup_ID}_legend`}>{usergroup.Usergroup_ID}: {usergroup.Title}</div>)\n            })}\n        </StyledUsergroupLegend>\n    )\n}\n\nexport default UsergroupAssignment","import styled from \"styled-components\";\n\nexport const StyledUsergroups = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n`","import { useCallback, useEffect, useState } from \"react\"\nimport Button from \"../../../modules/components/button/Button\"\nimport Form from \"../../../modules/components/form/Form\"\nimport FormBox from \"../../../modules/components/form/FormBox\"\nimport Selector from \"../../../modules/components/form/Selector\"\nimport SelectorItem from \"../../../modules/components/form/SelectorItem\"\nimport { deleteUsergroup, getAssociations, getUsergroups, newUsergroup, updateUsergroup } from \"../../../modules/data/DBConnect\"\nimport { StyledUsergroups } from \"./Usergroups.styled\"\n\nconst Usergroups = () => {\n\n    const [usergroups, setUsergroups] = useState(new Array(0))\n    const [associations, setAssociations] = useState(new Array(0))\n    const [selected, setSelected] = useState(-1)\n\n    const fetchUsergroups = useCallback(async () => {\n        let _usergroups = await getUsergroups()\n        if(_usergroups !== undefined)\n            setUsergroups(_usergroups)\n        else\n            setUsergroups(new Array(0))\n    }, [])\n\n    const reload = useCallback(() => {\n        setSelected(-1)\n        fetchUsergroups()\n    }, [fetchUsergroups])\n\n    const onSelect = useCallback((id) => {\n        setSelected(id)\n    }, [])\n\n    useEffect(() => {\n        getUsergroups().then((usergroups) => {\n            if(usergroups !== undefined)\n                setUsergroups(usergroups)\n            else\n                setUsergroups(new Array(0))\n        })\n        getAssociations().then((associations) => {\n            if(associations !== undefined)\n                setAssociations(associations)\n            else\n                setAssociations(new Array(0))\n        })\n    }, [fetchUsergroups])\n\n    return(\n        <StyledUsergroups>\n            <UsergroupSelector onSelect={onSelect} usergroups={usergroups}/>\n            <UsergroupForm usergroup={usergroups.find((usergroup) => usergroup.Usergroup_ID === selected)} associations={associations} reload={reload}/>\n        </StyledUsergroups>\n    )\n}\n\nconst UsergroupSelector = ({ usergroups, onSelect}) => {\n    return(\n        <Selector>\n            {usergroups.map(usergroup => {\n                return(<Usergroup onSelect={onSelect} key={usergroup.Title} usergroup={usergroup} />)\n            })}\n        </Selector>\n    )\n}\n\nconst Usergroup = ({ onSelect, usergroup}) => {\n\n    const onClick = useCallback(() => {\n        onSelect(usergroup.Usergroup_ID)\n    }, [onSelect, usergroup.Usergroup_ID])\n\n    return(\n        <SelectorItem onClick={onClick}>\n            {usergroup.Title}\n        </SelectorItem>\n    )\n}\n\nconst UsergroupForm = ({ usergroup, associations, reload }) => {\n\n    useEffect(() => {\n        document.getElementById('usergroup_form').reset()\n        document.getElementById('association').selectedIndex = associations?.findIndex(association => usergroup?.Association_ID === association.Association_ID)\n        document.getElementById('admin').checked = usergroup?.Admin === \"1\"\n        document.getElementById('moderator').checked = usergroup?.Moderator === \"1\"\n    }, [usergroup, associations])\n\n    const cancel = async (e) => {\n        e.preventDefault()\n        reload()\n    }\n\n    const update = async (e) => {\n        e.preventDefault()\n\n        let title       = document.getElementById('title').value\n        let admin       = document.getElementById('admin').checked\n        let moderator   = document.getElementById('moderator').checked\n        let info        = document.getElementById('info').value\n        let association = document.getElementById('association').options[document.getElementById('association').selectedIndex]?.value\n\n        if (title === \"\") {\n            alert(\"Bitte gib eine Bezeichnung ein!\")\n            return\n        }\n\n        console.log(association)\n\n        if (association === undefined) {\n            alert(\"Bitte wähl einen Verein aus!\")\n            return\n        }\n\n        if(usergroup !== undefined)\n            await updateUsergroup(usergroup.Usergroup_ID, title, admin, moderator, info, association)\n        else\n            await newUsergroup(title, admin, moderator, info, association)\n\n        reload()\n    }\n\n    const deleteUG = async (e) => {\n        e.preventDefault()\n        if(usergroup !== undefined)\n            await deleteUsergroup(usergroup.Usergroup_ID)\n        reload()\n    }\n\n    return(\n        <Form id=\"usergroup_form\">\n            <FormBox>\n                <label htmlFor=\"title\">Bezeichnung:</label>\n                <input type=\"text\" name=\"title\" id=\"title\" defaultValue={usergroup?.Title}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"admin\">Admin:</label>\n                <input type=\"checkbox\" name=\"admin\" id=\"admin\" defaultChecked={usergroup === undefined ? false : usergroup.Admin}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"moderator\">Moderator:</label>\n                <input type=\"checkbox\" name=\"moderator\" id=\"moderator\" defaultChecked={usergroup === undefined ? false : usergroup.Moderator}/>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"info\">Info:</label>\n                <textarea name=\"info\" id=\"info\" cols=\"30\" rows=\"3\" defaultValue={usergroup === undefined ? \"\" : usergroup.Info}></textarea>\n            </FormBox>\n            <FormBox>\n                <label htmlFor=\"association\">Verein:</label>\n                <select name=\"association\" id=\"association\">\n                    {associations.map(association => {\n                        return(<option key={association.Association_ID} value={association.Association_ID}>{association.Title}</option>)\n                    })}\n                </select>\n            </FormBox>\n\n            <div>\n                <Button onClick={cancel}>Abbrechen</Button>\n                <Button onClick={update}>Speichern</Button>\n                <Button onClick={deleteUG}>Löschen</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default Usergroups","import { useState } from \"react\";\nimport Button from \"../../modules/components/button/Button\"\nimport HeaderMenu from \"../../modules/components/headermenu/HeaderMenu\"\nimport { StyledAdministration, StyledView } from \"./Administration.styled\"\nimport Associations from \"./association/Associations\";\nimport AssociationAssignment from \"./associationassignment/AssociationAssignment\";\nimport DateTemplates from \"./datetemplates/DateTemplates\";\nimport Scores from \"./scores/Scores\"\nimport UsergroupAssignment from \"./usergroupassignment/UsergroupAssignment\";\nimport Usergroups from \"./usergroups/Usergroups\";\n\nconst Administration = () => {\n\n    const [view, setView] = useState(0);\n\n    const navigate = (e) => {\n        switch(e.target.id) {\n        default:\n        case 'administration_button_0':\n            setView(0)\n            break\n        case 'administration_button_1':\n            setView(1)\n            break\n        case 'administration_button_2':\n            setView(2)\n            break\n        case 'administration_button_3':\n            setView(3)\n            break\n        case 'administration_button_4':\n            setView(4)\n            break\n        case 'administration_button_5':\n            setView(5)\n            break\n        }\n    }\n\n    return(\n        <StyledAdministration>\n            <HeaderMenu>\n                <Button id='administration_button_0' onClick={navigate}>Vereine</Button>\n                <Button id='administration_button_1' onClick={navigate}>Vereinzuordnung</Button>\n                <Button id='administration_button_2' onClick={navigate}>Benutzergruppen</Button>\n                <Button id='administration_button_3' onClick={navigate}>Gruppenzuordnung</Button>\n                <Button id=\"administration_button_4\" onClick={navigate}>Terminvorlagen</Button>\n                <Button id=\"administration_button_5\" onClick={navigate}>Noten</Button>\n            </HeaderMenu>\n            <View view={view}/>\n        </StyledAdministration>\n    )\n}\n\nconst View = ({ view }) => {\n    switch(view){\n    default:\n    case 0:\n        return(<StyledView><Associations /></StyledView>)\n    case 1:\n        return(<StyledView><AssociationAssignment /></StyledView>)\n    case 2:\n        return(<StyledView><Usergroups /></StyledView>)\n    case 3:\n        return(<StyledView><UsergroupAssignment /></StyledView>)\n    case 4:\n        return(<StyledView><DateTemplates /></StyledView>)\n    case 5:\n        return(<StyledView><Scores /></StyledView>)\n    }\n}\n\nexport default Administration","import styled from \"styled-components\"\n\nconst Form = styled.form`\n    display: block;\n    width: 100%;\n    padding: 5px;\n`\n\nexport default Form","import styled from \"styled-components\";\n\nconst FormBox = styled.div`\n    display: block;\n    padding: 2px;\n    label {\n        float: left;\n        width: 25%;\n        min-width: 100px;\n    }\n`\n\nexport default FormBox","import styled from \"styled-components\"\n\nconst Selector = styled.nav`\n    margin: 2px;\n    padding: 2px;\n    white-space: nowrap;\n    border: 1px solid ${({ theme }) => theme.primaryLight};\n    border-radius: 10px;\n    overflow-y: scroll;\n    max-height: 75vh;\n    min-width: fit-content;\n    width: auto;\n    max-width: fit-content;\n\n\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n        white-space: normal;\n    }\n\n    ::-webkit-scrollbar {\n        width: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background: none;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: ${({ theme }) => theme.primaryLight};\n        border-radius: 5px;\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: ${({ theme }) => theme.primaryHover};\n    }\n`\n\nexport default Selector","import styled from \"styled-components\"\n\nconst SelectorItem = styled.div`\n    user-select: none;\n    cursor: pointer;\n    padding: 2px;\n    border-radius: 5px;\n\n    &:hover {\n        background: ${({ theme }) => theme.primaryHover};\n    }\n`\n\nexport default SelectorItem","import styled from \"styled-components\";\n\nconst HeaderMenu = styled.nav`\n    display: flex;\n    background-color: ${({ theme }) => theme.primaryHover};\n    position: relative;\n    padding: 5px;\n    margin: 5px;\n    border-radius: 20px;\n\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport default HeaderMenu","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    margin: 5px;\n    border: 1px solid ${({ theme }) => theme.primaryLight};\n    border-radius: 10px;\n    border-spacing: 0;\n    width: auto;\n\n    th {\n        border-bottom: 1px solid ${({ theme }) => theme.primaryLight};\n        padding: 5px;\n    }\n\n    td {\n        border-top: 1px solid ${({ theme }) => theme.primaryLight};\n        padding: 5px;\n        white-space: nowrap;\n    }\n\n    td:first-child {\n        white-space: normal;\n    }\n`"],"names":["StyledAdministration","styled","div","_templateObject","_taggedTemplateLiteral","StyledView","_templateObject2","StyledAssociations","AssociationSelector","_ref","associations","onSelect","_jsx","Selector","children","map","association","AssociationItem","Title","_ref2","onClick","useCallback","Association_ID","SelectorItem","AssociationForm","_ref3","members","reload","useEffect","document","getElementById","reset","selectedIndex","findIndex","member","FirstChair","Member_ID","Clerk","Treasurer","_jsxs","Form","id","FormBox","htmlFor","type","name","defaultValue","value","Forename","Surname","concat","Button","async","e","preventDefault","_document$getElementB","_document$getElementB2","_document$getElementB3","title","firstchair","options","clerk","treasurer","undefined","updateAssociation","newAssociation","Associations","setAssociations","useState","Array","setMembers","selected","setSelected","fetchAssociations","_associations","getAssociations","fetchMembers","_members","getMembers","find","Check","callback","IconContext","Provider","color","className","IoCheckmarkCircle","size","Circle","Deny","IoIosCloseCircle","_ref5","cx","cy","r","fill","StyledAssociationAssignment","StyledTableHeader","th","theme","mobile","StyledMobileTableHeader","_templateObject3","Header","_templateObject4","_Fragment","Assignment","member_id","association_id","initial","assigned","setAssigned","_assigned","AssignButton","AssociationAssignment","_associationassignmen","_associationassignmen2","associationassignment","setAssociationassignment","changedAssignment","setChangedAssignment","fetchAssociationassignment","getAssociationAssignments","then","assignments","assign","saveChanges","updateAssociationAssignments","Table","_member$Associations","Fullname","Assigned","StyledDateTemplates","DateTemplateSelector","datetemplates","datetemplate","DateTemplate","DateTemplate_ID","DateTemplateForm","usergroups","category_select","i","length","Category","usergroup","Usergroup_ID","cols","rows","Description","Type","Location","step","Begin","Departure","Leave_dep","description","category","location","begin","departure","leave_dep","usergroup_id","updateDateTemplate","newDateTemplate","DateTemplates","setDatetemplates","setUsergroups","fetchDatetemplates","_datetemplates","getDateTemplates","fetchUsergroups","_usergroups","getUsergroups","StyledScores","ScoreSelector","scores","sort","a","b","localeCompare","score","Score","Score_ID","ScoreForm","Link","link","updateScore","newScore","deleteScore","src","Scores","setScores","fetchScores","getScores","StyledUsergroupAssignment","StyledUsergroupLegend","UsergroupLegend","_ref4","UsergroupAssignment","_usergroupassignment$","_usergroupassignment$2","usergroupassignment","setUsergroupassignment","fetchUsergroupassignment","_usergroupassignment","getUsergroupAssignments","updateUsergroupAssignments","Usergroups","user","StyledUsergroups","UsergroupSelector","Usergroup","UsergroupForm","checked","Admin","Moderator","defaultChecked","Info","admin","moderator","info","console","log","updateUsergroup","newUsergroup","alert","deleteUsergroup","View","view","Administration","setView","navigate","target","HeaderMenu","form","nav","primaryLight","primaryHover","table"],"sourceRoot":""}